# -*- coding: utf-8 -*-
from setuptools import setup

modules = \
['pytest_socket']
install_requires = \
['pytest>=3.6.3']

entry_points = \
{'pytest11': ['socket = pytest_socket']}

setup_kwargs = {
    'name': 'pytest-socket',
    'version': '0.6.0',
    'description': 'Pytest Plugin to disable socket calls during tests',
    'long_description': '# pytest-socket\n\n[![PyPI current version](https://img.shields.io/pypi/v/pytest-socket.svg)](https://pypi.python.org/pypi/pytest-socket)\n[![Python Support](https://img.shields.io/pypi/pyversions/pytest-socket.svg)](https://pypi.python.org/pypi/pytest-socket)\n[![Tests](https://github.com/miketheman/pytest-socket/workflows/Python%20Tests/badge.svg)](https://github.com/miketheman/pytest-socket/actions?query=workflow%3A%22Python+Tests%22)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/miketheman/pytest-socket/main.svg)](https://results.pre-commit.ci/latest/github/miketheman/pytest-socket/main)\n[![Maintainability](https://api.codeclimate.com/v1/badges/1608a75b1c3a20211992/maintainability)](https://codeclimate.com/github/miketheman/pytest-socket/maintainability)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmiketheman%2Fpytest-socket.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fmiketheman%2Fpytest-socket?ref=badge_shield)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nA plugin to use with Pytest to disable or restrict `socket` calls during\ntests to ensure network calls are prevented.\n\n---\n\n## Features\n\n- Disables all network calls flowing through Python\\\'s `socket` interface.\n\n## Requirements\n\n- [Pytest](https://github.com/pytest-dev/pytest) 3.6.3 or greater\n\n## Installation\n\nYou can install `pytest-socket` via [pip](https://pypi.python.org/pypi/pip/)\nfrom [PyPI](https://pypi.python.org/pypi):\n\n```console\n$ pip install pytest-socket\n```\n\nor add to your `pyproject.toml` for [poetry](https://python-poetry.org/):\n\n```ini\n[tool.poetry.dev-dependencies]\npytest-socket = "*"\n```\n\n## Usage\n\nRun `pytest --disable-socket`, tests should fail on any access to `socket` or\nlibraries using socket with a `SocketBlockedError`.\n\nTo add this flag as the default behavior, add this section to your\n[`pytest.ini`](https://docs.pytest.org/en/6.2.x/customize.html#pytest-ini):\n\n```ini\n[pytest]\naddopts = --disable-socket\n```\n\nor add this to your [`setup.cfg`](https://docs.pytest.org/en/6.2.x/customize.html#setup-cfg):\n\n```ini\n[tool:pytest]\naddopts = --disable-socket\n```\n\nor update your [`conftest.py`](https://docs.pytest.org/en/6.2.x/writing_plugins.html#conftest-py-plugins) to include:\n\n```python\nfrom pytest_socket import disable_socket\n\ndef pytest_runtest_setup():\n    disable_socket()\n```\n\nTo enable Unix sockets during the test run (e.g. for async), add this option:\n\n```ini\n[pytest]\naddopts = --disable-socket --allow-unix-socket\n```\n\nTo enable specific tests use of `socket`, pass in the fixture to the test or\nuse a marker:\n\n```python\ndef test_explicitly_enable_socket(socket_enabled):\n    assert socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n\n@pytest.mark.enable_socket\ndef test_explicitly_enable_socket_with_mark():\n    assert socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n```\n\nTo allow only specific hosts per-test:\n\n```python\n@pytest.mark.allow_hosts([\'127.0.0.1\'])\ndef test_explicitly_enable_socket_with_mark():\n    assert socket.socket.connect((\'127.0.0.1\', 80))\n```\n\nor for whole test run\n\n```ini\n[pytest]\naddopts = --allow-hosts=127.0.0.1,127.0.1.1\n```\n\n### Frequently Asked Questions\n\nQ: Why is network access disabled in some of my tests but not others?\n\nA: pytest\'s default fixture scope is "function", which `socket_enabled` uses.\nIf you create another fixture that creates a socket usage that has a "higher"\ninstantiation order, such as at the module/class/session, then the higher order\nfixture will be resolved first, and won\'t be disabled during the tests.\nRead more in [this excellent example](https://github.com/miketheman/pytest-socket/issues/45#issue-679835420)\nand more about [pytest fixture order here](https://docs.pytest.org/en/stable/fixture.html#fixture-instantiation-order).\n\nThis behavior may change in the future, as we learn more about pytest\nfixture order, and what users expect to happen.\n\n## Contributing\n\nContributions are very welcome. Tests can be run with\n[pytest](https://github.com/pytest-dev/pytest), please ensure the\ncoverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the\n[MIT](http://opensource.org/licenses/MIT) license, "pytest-socket" is\nfree and open source software\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fmiketheman%2Fpytest-socket.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fmiketheman%2Fpytest-socket?ref=badge_large)\n\n## Issues\n\nIf you encounter any problems, please [file an issue](https://github.com/miketheman/pytest-socket/issues)\nalong with a detailed description.\n\n## References\n\nThis [Pytest](https://github.com/pytest-dev/pytest) plugin was generated with\n[Cookiecutter](https://github.com/audreyr/cookiecutter) along with\n[\\@hackebrot](https://github.com/hackebrot)\\\'s\n[Cookiecutter-pytest-plugin](https://github.com/pytest-dev/cookiecutter-pytest-plugin)\ntemplate.\n\nThis plugin came about due to the efforts by\n[\\@hangtwenty](https://github.com/hangtwenty) solving a [StackOverflow\nquestion](https://stackoverflow.com/a/30064664), then converted into a\npytest plugin by [\\@miketheman](https://github.com/miketheman).\n',
    'author': 'Mike Fiedler',
    'author_email': 'miketheman@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://pypi.org/project/pytest-socket/',
    'py_modules': modules,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.7,<4.0',
}


setup(**setup_kwargs)
