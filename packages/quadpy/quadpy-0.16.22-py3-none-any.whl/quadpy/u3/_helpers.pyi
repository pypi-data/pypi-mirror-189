from .._exception import QuadpyError as QuadpyError
from ..helpers import QuadratureScheme as QuadratureScheme
from _typeshed import Incomplete

schemes: Incomplete

def register(in_schemes) -> None: ...

class U3Scheme(QuadratureScheme):
    symmetry_data: Incomplete
    domain: str
    theta_phi: Incomplete
    theta_phi_symbolic: Incomplete
    def __init__(self, name, symmetry_data, degree, source, tol: float = ..., comments: Incomplete | None = ...) -> None: ...
    def plot(self): ...
    def integrate(self, f, center, radius, dot=...): ...
    def integrate_spherical(self, f, dot=...): ...
    def compute_residuals(self, level): ...

def area(radius): ...
def cartesian_to_spherical(X): ...
def cartesian_to_spherical_sympy(X): ...
def expand_symmetries_points_only(data): ...
def expand_symmetries(data): ...
def get_good_scheme(degree): ...
