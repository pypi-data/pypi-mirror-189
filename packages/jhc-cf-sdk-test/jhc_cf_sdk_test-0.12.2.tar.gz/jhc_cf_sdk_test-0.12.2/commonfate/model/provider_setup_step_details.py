# coding: utf-8

"""
    Common Fate

    Common Fate API  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from commonfate import schemas  # noqa: F401


class ProviderSetupStepDetails(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "instructions",
            "title",
            "configFields",
        }
        
        class properties:
            title = schemas.StrSchema
            instructions = schemas.StrSchema
            
            
            class configFields(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ProviderConfigField']:
                        return ProviderConfigField
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ProviderConfigField'], typing.List['ProviderConfigField']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'configFields':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ProviderConfigField':
                    return super().__getitem__(i)
            __annotations__ = {
                "title": title,
                "instructions": instructions,
                "configFields": configFields,
            }
    
    instructions: MetaOapg.properties.instructions
    title: MetaOapg.properties.title
    configFields: MetaOapg.properties.configFields
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["instructions"]) -> MetaOapg.properties.instructions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["configFields"]) -> MetaOapg.properties.configFields: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["title", "instructions", "configFields", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["instructions"]) -> MetaOapg.properties.instructions: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["configFields"]) -> MetaOapg.properties.configFields: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["title", "instructions", "configFields", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        instructions: typing.Union[MetaOapg.properties.instructions, str, ],
        title: typing.Union[MetaOapg.properties.title, str, ],
        configFields: typing.Union[MetaOapg.properties.configFields, list, tuple, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProviderSetupStepDetails':
        return super().__new__(
            cls,
            *args,
            instructions=instructions,
            title=title,
            configFields=configFields,
            _configuration=_configuration,
            **kwargs,
        )

from commonfate.model.provider_config_field import ProviderConfigField
