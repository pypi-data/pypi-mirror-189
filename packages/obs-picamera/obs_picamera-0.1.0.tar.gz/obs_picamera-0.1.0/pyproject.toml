[tool.poetry]
name = "obs-picamera"
version = "0.1.0"
description = "A python module to record video of overtaking events to allow vehicle type identification of OpenBikeSensor overtaking events."
authors = [
    "gluap <github@pgoergen.de>",
]
license = "MIT"
readme = "README.md"

documentation = "https://gluap.github.io/obs-picamera"
homepage = "https://gluap.github.io/obs-picamera"
repository = "https://github.com/gluap/obs-picamera"

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

packages = [
    { include = "obs_picamera", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.9, <4.0"
picamera2 = ">=0.3.8"
bleak = ">=0.19.5"
pytest-mock = ">=3.10.0"

[tool.poetry.dev-dependencies]
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
isort = "*"
mkdocstrings = { version = ">=0.18", extras = ["python"] }
mkdocs-material = "*"
mypy = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
pytest-asyncio = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"
numpy = "<=1.24.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = """\
    --cov obs_picamera \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 70
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[tool.poetry.scripts]
obs_picamera = 'obs_picamera.scripts.obs_picamera:main'
