[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "setuptools_openapi_generator"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
description = "A setuptools extension for generating OpenAPI clients"
dependencies = ["openapi-python-client", "tomli>=1.0.0;python_version < '3.11'"]
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.rst"
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "black",
    "mypy",
    "flake8-isort",
    "Flake8-pyproject",
    "pipdeptree",
    "pre-commit",
    "pytest-cov",
    "tox-direct",
    "types-mock",
]

[project.entry-points."setuptools.finalize_distribution_options"]
setuptools_openapi_generator = "setuptools_openapi_generator.integration:generate_clients"

[project.urls]
GitHub = "https://github.com/DiamondLightSource/setuptools_openapi_generator"

[[project.authors]] # Further authors may be added by duplicating this section
email = "garry.o'donnell@diamond.ac.uk"
name = "Garry O'Donnell"

[tool.setuptools_scm]
write_to = "src/setuptools_openapi_generator/_version.py"

[tool.mypy]
ignore_missing_imports = true # Ignore missing stubs in imported modules
plugins = ["pydantic.mypy"]

[tool.isort]
float_to_top = true
profile = "black"

[tool.flake8]
extend-ignore = [
    "E203", # See https://github.com/PyCQA/pycodestyle/issues/373
    "F811", # support typing.overload decorator
    "F722", # allow Annotated[typ, some_func("some string")]
]
max-line-length = 88 # Respect black's line length (default 88),
exclude = [".tox", "venv"]


[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    --cov=setuptools_openapi_generator --cov-report term --cov-report xml:cov.xml
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
# Doctest python code in python code in src docstrings, test functions in tests
testpaths = "src tests"
norecursedirs = "tests/sample_project"

[tool.coverage.run]
data_file = "/tmp/setuptools_openapi_generator.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True

[testenv:{pre-commit,mypy,pytest}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals = 
    pytest 
    pre-commit
    mypy
    sphinx-build
    sphinx-autobuild
commands =
    pytest: pytest {posargs}
    mypy: mypy src tests {posargs}
    pre-commit: pre-commit run --all-files {posargs}
"""
