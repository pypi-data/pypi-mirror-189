{"version":3,"sources":["ConfettiComponent.tsx","index.tsx"],"names":["clearCanvas","body","window","parent","document","elements","getElementsByTagName","i","length","removeChild","err","createCanvas","canvas","createElement","style","position","width","height","top","left","zIndex","pointerEvents","appendChild","ConfettiComponent","render","emojis","props","args","jsConfetti","JSConfetti","row","scale","Math","round","addConfetti","emojiSize","min","max","confettiNumber","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","getElementById"],"mappings":"4PASA,SAASA,IAGP,IAFA,IAAMC,EAAOC,OAAOC,OAAOC,SAASH,KAC9BI,EAAWJ,EAAKK,qBAAqB,UAClCC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACnC,IACEN,EAAKQ,YAAYJ,EAASE,IAC1B,MAAOG,KAMb,SAASC,IAEP,IAAMC,EAASR,SAASS,cAAc,UAYtC,OAVAD,EAAOE,MAAMC,SAAW,QACxBH,EAAOE,MAAME,MAAQ,OACrBJ,EAAOE,MAAMG,OAAS,OACtBL,EAAOE,MAAMI,IAAM,IACnBN,EAAOE,MAAMK,KAAO,IACpBP,EAAOE,MAAMM,OAAS,OACtBR,EAAOE,MAAMO,cAAgB,OAE7BnB,OAAOC,OAAOC,SAASH,KAAKqB,YAAYV,GAEjCA,EAGT,IAIMW,EAAiB,iKAyBpB,OAzBoB,oCAEdC,OAAS,WAGd,IAAMC,EAAS,EAAKC,MAAMC,KAAa,OAIvC,GAFA3B,IAEe,OAAXyB,EAAiB,CACnB,IAEwB,EAFlBb,EAASD,IACTiB,EAAa,IAAIC,IAAW,CAAEjB,WAAU,cAC5Ba,GAAM,IAAxB,2BAA0B,CAAC,IAAhBK,EAAG,QACNC,EAAQC,KAAKC,MAAqB,IAAfH,EAAW,MAAU,KAC9CF,EAAWM,YAAY,CACrBT,OAAQ,CAACK,EAAW,OACpBK,UAAWH,KAAKI,IAAI,IAAKJ,KAAKK,IAAI,GAAIN,IACtCO,eAAgBN,KAAKI,IAAI,IAAKJ,KAAKK,IAAI,GAAIN,OAE9C,+BAKH,MAAO,IACR,wBAzBoB,CAASQ,KAiCjBC,cAAwBjB,GCvEvCkB,IAASjB,OACP,kBAAC,IAAMkB,WAAU,KACf,kBAAC,EAAiB,OAEpBtC,SAASuC,eAAe,W","file":"static/js/main.cc7c0cde.chunk.js","sourcesContent":["import {\n  // Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport { ReactNode } from \"react\"\nimport JSConfetti from \"js-confetti\"\n\n\nfunction clearCanvas() {\n  const body = window.parent.document.body;\n  const elements = body.getElementsByTagName(\"canvas\");\n  for (var i = 0; i < elements.length; i++) {\n    try {\n      body.removeChild(elements[i]);\n    } catch (err) {\n    }\n  }\n}\n\n\nfunction createCanvas(): HTMLCanvasElement {\n\n  const canvas = document.createElement(\"canvas\")\n\n  canvas.style.position = \"fixed\"\n  canvas.style.width = \"100%\"\n  canvas.style.height = \"100%\"\n  canvas.style.top = \"0\"\n  canvas.style.left = \"0\"\n  canvas.style.zIndex = \"1000\"\n  canvas.style.pointerEvents = \"none\"\n\n  window.parent.document.body.appendChild(canvas)\n\n  return canvas\n}\n\n/**\n * This is a React-based custom component. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass ConfettiComponent extends StreamlitComponentBase {\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"emojis\" arg.\n    const emojis = this.props.args[\"emojis\"]\n\n    clearCanvas();\n\n    if (emojis !== null) {\n      const canvas = createCanvas();\n      const jsConfetti = new JSConfetti({ canvas });\n      for (const row of emojis) {\n        const scale = Math.round(row[\"score\"] * 100 * 1.5);\n        jsConfetti.addConfetti({\n          emojis: [row[\"emoji\"]],\n          emojiSize: Math.min(100, Math.max(50, scale)),\n          confettiNumber: Math.min(100, Math.max(10, scale)),\n        })\n      }\n    }\n\n    // Streamlit.setComponentValue(null);\n\n    return \"\"\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don\"t need to edit withStreamlitConnection (but you\"re welcome to!).\nexport default withStreamlitConnection(ConfettiComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ConfettiComponent from \"./ConfettiComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfettiComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}