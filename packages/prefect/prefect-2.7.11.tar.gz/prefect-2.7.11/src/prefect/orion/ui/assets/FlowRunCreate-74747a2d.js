import{d as C,Y as v,al as k,a0 as D,c as m,u as t,a as b,w as p,f as F,a2 as T,a3 as x,o as B,b as d,aY as N,aZ as S,a_ as $,a$ as I,v as i}from"./index-7e95d846-e701538a.js";import{u as M}from"./usePageTitle-3d045253.js";import"./index-585abb35.js";import{r as y}from"./routes-ebc284a5.js";import"./meta-26546594.js";const Z=C({__name:"FlowRunCreate",setup(V){const u=v(),a=k("deploymentId"),n=x(),f=D(u.deployments.getDeployment,[a]),e=m(()=>f.response),_=async s=>{var r,o;try{const l=await u.deployments.createDeploymentFlowRun(a.value,s),c=((o=(r=s.state)==null?void 0:r.stateDetails)==null?void 0:o.scheduledTime)??void 0,g=!c,h=$(I,{flowRun:l,flowRunRoute:y.flowRun,router:n,immediate:g,startTime:c});i(h,"success"),n.push(y.deployment(a.value))}catch(l){i("Something went wrong trying to create a flow run","error"),console.error(l)}},w=()=>{n.back()},R=m(()=>e.value?`Create Flow Run for Deployment: ${e.value.name}`:"Create Flow Run for Deployment");return M(R),(s,r)=>{const o=T("p-layout-default");return t(e)?(B(),b(o,{key:0},{header:p(()=>[d(t(N),{deployment:t(e)},null,8,["deployment"])]),default:p(()=>[d(t(S),{deployment:t(e),onSubmit:_,onCancel:w},null,8,["deployment"])]),_:1})):F("",!0)}}});export{Z as default};
