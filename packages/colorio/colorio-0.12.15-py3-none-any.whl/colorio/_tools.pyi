import numpy as np
from . import observers as observers
from ._helpers import SpectralData as SpectralData
from .cs import ColorCoordinates as ColorCoordinates, ColorSpace as ColorSpace, convert as convert, string_to_cs as string_to_cs
from .illuminants import planckian_radiator as planckian_radiator, spectrum_to_xyz100 as spectrum_to_xyz100
from numpy.typing import ArrayLike as ArrayLike

def plot_xy_gamut(fill_horseshoe: bool = ..., plot_planckian_locus: bool = ...): ...
def get_mono_outline_xy(observer, max_stepsize): ...
def plot_srgb1_gradient(colorspace: Union[ColorSpace, str], srgb0: ArrayLike, srgb1: ArrayLike, n: int = ...): ...
def get_srgb1_gradient(colorspace: Union[ColorSpace, str], srgb0: ArrayLike, srgb1: ArrayLike, n: int) -> np.ndarray: ...
def plot_srgb255_gradient(colorspace: Union[ColorSpace, str], srgb0: ArrayLike, srgb1: ArrayLike, n: int = ...): ...
def get_srgb255_gradient(colorspace: Union[ColorSpace, str], srgb0: ArrayLike, srgb1: ArrayLike, n: int) -> np.ndarray: ...
def plot_primary_srgb_gradients(colorspace: Union[ColorSpace, str], n: int = ...): ...
