import numpy as np
from ._color_space import ColorSpace as ColorSpace
from ._helpers import string_to_cs as string_to_cs
from _typeshed import Incomplete
from numpy.typing import ArrayLike as ArrayLike

class ColorCoordinates:
    data: Incomplete
    color_space: Incomplete
    def __init__(self, data: ArrayLike, color_space: Union[ColorSpace, str]) -> None: ...
    def __mul__(self, alpha): ...
    __rmul__: Incomplete
    def __add__(self, other): ...
    __radd__: Incomplete
    def __eq__(self, other): ...
    def __lt__(self, other): ...
    def __le__(self, other): ...
    def __gt__(self, other): ...
    def __ge__(self, other): ...
    def copy(self): ...
    def convert(self, cs: Union[ColorSpace, str], **kwargs) -> None: ...
    @property
    def lightness(self) -> np.ndarray: ...
    @property
    def hue(self) -> np.ndarray: ...

def convert(coords: ColorCoordinates, cs: Union[ColorSpace, str], **kwargs) -> ColorCoordinates: ...
