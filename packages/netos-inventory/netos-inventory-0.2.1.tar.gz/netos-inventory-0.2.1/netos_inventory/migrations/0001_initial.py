# Generated by Django 4.0.8 on 2022-12-12 20:54

import dcim.fields
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import ipam.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wireless', '0005_wirelesslink_interface_types'),
        ('extras', '0077_customlink_extend_text_and_url'),
        ('ipam', '0060_alter_l2vpn_slug'),
        ('dcim', '0161_cabling_cleanup'),
    ]

    operations = [
        migrations.CreateModel(
            name='ASNDetected',
            fields=[
            ],
            options={
                'verbose_name': 'ans detected',
                'verbose_name_plural': 'ans detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ipam.asn',),
        ),
        migrations.CreateModel(
            name='CableDetected',
            fields=[
            ],
            options={
                'verbose_name': 'cable detected',
                'verbose_name_plural': 'cables detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dcim.cable',),
        ),
        migrations.CreateModel(
            name='DeviceDetected',
            fields=[
            ],
            options={
                'verbose_name': 'device detected',
                'verbose_name_plural': 'devices detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dcim.device',),
        ),
        migrations.CreateModel(
            name='FHRPGroupDetected',
            fields=[
            ],
            options={
                'verbose_name': 'fhrp group detected',
                'verbose_name_plural': 'fhrp groups detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ipam.fhrpgroup',),
        ),
        migrations.CreateModel(
            name='InterfaceDetected',
            fields=[
            ],
            options={
                'verbose_name': 'interface detected',
                'verbose_name_plural': 'interfaces detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dcim.interface',),
        ),
        migrations.CreateModel(
            name='InventoryItemDetected',
            fields=[
            ],
            options={
                'verbose_name': 'inventory_item_detected',
                'verbose_name_plural': 'inventory_items_detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dcim.inventoryitem',),
        ),
        migrations.CreateModel(
            name='IPAddressDetected',
            fields=[
            ],
            options={
                'verbose_name': 'ip address detected',
                'verbose_name_plural': 'ip addresses detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ipam.ipaddress',),
        ),
        migrations.CreateModel(
            name='LANConsolidationReport',
            fields=[
            ],
            options={
                'verbose_name': 'lan_consolidation_report',
                'verbose_name_plural': 'lan_consolidation_reports',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dcim.device',),
        ),
        migrations.CreateModel(
            name='ModuleDetected',
            fields=[
            ],
            options={
                'verbose_name': 'module_detected',
                'verbose_name_plural': 'modules detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dcim.module',),
        ),
        migrations.CreateModel(
            name='PrefixDetected',
            fields=[
            ],
            options={
                'verbose_name': 'prefix detected',
                'verbose_name_plural': 'prefixes detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ipam.prefix',),
        ),
        migrations.CreateModel(
            name='ReconDevice',
            fields=[
            ],
            options={
                'verbose_name': 'device',
                'verbose_name_plural': 'devices',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dcim.device',),
        ),
        migrations.CreateModel(
            name='VLANDetected',
            fields=[
            ],
            options={
                'verbose_name': 'vlan detected',
                'verbose_name_plural': 'vlans detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ipam.vlan',),
        ),
        migrations.CreateModel(
            name='VRFDetected',
            fields=[
            ],
            options={
                'verbose_name': 'vrf detected',
                'verbose_name_plural': 'vrfs detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ipam.vrf',),
        ),
        migrations.CreateModel(
            name='WirelessLANDetected',
            fields=[
            ],
            options={
                'verbose_name': 'wireless lan detected',
                'verbose_name_plural': 'wireless lans detected',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('wireless.wirelesslan',),
        ),
        migrations.CreateModel(
            name='NetworkFabric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('ip_address', ipam.fields.IPAddressField()),
                ('mac_address', dcim.fields.MACAddressField(blank=True, null=True)),
                ('ieee_mac_vendor_prefix', models.CharField(max_length=30)),
                ('ieee_mac_vendor', models.CharField(max_length=100)),
                ('dns_record', models.CharField(blank=True, max_length=255, null=True)),
                ('whois', models.CharField(max_length=400)),
                ('whois_link', models.URLField()),
                ('last_detected', models.DateTimeField()),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fabric', to='dcim.device')),
                ('interface', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fabric', to='dcim.interface')),
                ('prefix', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fabric', to='ipam.prefix')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fabric', to='dcim.region')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fabric', to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('vlan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fabric', to='ipam.vlan')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
