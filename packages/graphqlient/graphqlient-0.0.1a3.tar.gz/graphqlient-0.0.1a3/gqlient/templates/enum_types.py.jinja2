import enum

{% for enum_type in gql_types.enum_types %}

class {{enum_type}}(enum.Enum):
    {{ '__graphql_map__ = {' }}{%  for field in enum_type.values %}
        '{{ underscore(field) }}': '{{ field }}'{% if not loop.last %}{{ ', ' }}{% endif %}
    {%- endfor %}
    {{ '}' }}

    {% for field_name, enum_value in enum_type.values.items() -%}
    {{ underscore(field_name) }} = '{{enum_value.value}}'
    {% endfor %}
{%-  endfor %}