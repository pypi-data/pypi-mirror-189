# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cakes.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x63\x61kes.proto\x12\x05\x43\x41KES\"\x19\n\x07\x45\x43\x44HKey\x12\x0e\n\x06pubkey\x18\x01 \x01(\x0c\"\x05\n\x03\x41\x63k\"/\n\x17IssueCertificateRequest\x12\x14\n\x0c\x45ncryptedCSR\x18\x02 \x01(\x0c\"P\n\x15IssueCertificateReply\x12\x1b\n\x13\x45ncryptedClientCert\x18\x01 \x01(\x0c\x12\x1a\n\x12\x45ncryptedCertChain\x18\x02 \x01(\x0c\x32\xb7\x01\n\x05\x43\x41KES\x12,\n\x0c\x43lientPubkey\x12\x0e.CAKES.ECDHKey\x1a\n.CAKES.Ack\"\x00\x12,\n\x0cServerPubkey\x12\n.CAKES.Ack\x1a\x0e.CAKES.ECDHKey\"\x00\x12R\n\x10IssueCertificate\x12\x1e.CAKES.IssueCertificateRequest\x1a\x1c.CAKES.IssueCertificateReply\"\x00\x62\x06proto3')



_ECDHKEY = DESCRIPTOR.message_types_by_name['ECDHKey']
_ACK = DESCRIPTOR.message_types_by_name['Ack']
_ISSUECERTIFICATEREQUEST = DESCRIPTOR.message_types_by_name['IssueCertificateRequest']
_ISSUECERTIFICATEREPLY = DESCRIPTOR.message_types_by_name['IssueCertificateReply']
ECDHKey = _reflection.GeneratedProtocolMessageType('ECDHKey', (_message.Message,), {
  'DESCRIPTOR' : _ECDHKEY,
  '__module__' : 'cakes_pb2'
  # @@protoc_insertion_point(class_scope:CAKES.ECDHKey)
  })
_sym_db.RegisterMessage(ECDHKey)

Ack = _reflection.GeneratedProtocolMessageType('Ack', (_message.Message,), {
  'DESCRIPTOR' : _ACK,
  '__module__' : 'cakes_pb2'
  # @@protoc_insertion_point(class_scope:CAKES.Ack)
  })
_sym_db.RegisterMessage(Ack)

IssueCertificateRequest = _reflection.GeneratedProtocolMessageType('IssueCertificateRequest', (_message.Message,), {
  'DESCRIPTOR' : _ISSUECERTIFICATEREQUEST,
  '__module__' : 'cakes_pb2'
  # @@protoc_insertion_point(class_scope:CAKES.IssueCertificateRequest)
  })
_sym_db.RegisterMessage(IssueCertificateRequest)

IssueCertificateReply = _reflection.GeneratedProtocolMessageType('IssueCertificateReply', (_message.Message,), {
  'DESCRIPTOR' : _ISSUECERTIFICATEREPLY,
  '__module__' : 'cakes_pb2'
  # @@protoc_insertion_point(class_scope:CAKES.IssueCertificateReply)
  })
_sym_db.RegisterMessage(IssueCertificateReply)

_CAKES = DESCRIPTOR.services_by_name['CAKES']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ECDHKEY._serialized_start=22
  _ECDHKEY._serialized_end=47
  _ACK._serialized_start=49
  _ACK._serialized_end=54
  _ISSUECERTIFICATEREQUEST._serialized_start=56
  _ISSUECERTIFICATEREQUEST._serialized_end=103
  _ISSUECERTIFICATEREPLY._serialized_start=105
  _ISSUECERTIFICATEREPLY._serialized_end=185
  _CAKES._serialized_start=188
  _CAKES._serialized_end=371
# @@protoc_insertion_point(module_scope)
