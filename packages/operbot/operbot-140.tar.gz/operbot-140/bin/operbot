#!/usr/bin/env python3
# This file is placed in the Public Domain.


"write your own commands"


import os, sys ; sys.path.insert(0, os.getcwd())


import atexit
import importlib
import importlib.util
import inspect
import os
import readline
import sys
import time
import termios
import traceback



from opr.dbs import last
from opr.tbl import Command, Wd
from opr.hdl import Event, Handler
from opr.obj import fmt
from opr.run import Cfg, boot, command
from opr.scn import scan
from opr.thr import launch
from opr.utl import wait


from operbot import cmd, fnd, irc, log, rss, utl


scan(cmd)
scan(fnd)
scan(irc)
scan(log)
scan(rss)
scan(utl)


Cfg.name = "operbot"


Wd.workdir = os.path.expanduser("~/.%s" % Cfg.name)


date = time.ctime(time.time()).replace("  ", " ")


class CLI(Handler):

    @staticmethod
    def announce(txt):
        pass

    @staticmethod
    def raw(txt):
        print(txt)
        sys.stdout.flush()


class Console(CLI):

    @staticmethod
    def handle(event):
        Command.handle(event)
        event.wait()

    def poll(self):
        event = Event()
        event.txt = input("> ")
        event.orig = repr(self)
        return event


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    sis = open("/dev/null", 'r')
    os.dup2(sis.fileno(), sys.stdin.fileno())
    if not Cfg.verbose:
        sos = open("/dev/null", 'a+')
        ses = open("/dev/null", 'a+')
        os.dup2(sos.fileno(), sys.stdout.fileno())
        os.dup2(ses.fileno(), sys.stderr.fileno())


def help():
    print("operbot [-c|-d|-h] [%s]\n\n-h show help \n-c start console\n-d daemonize" % "|".join(Command.cmd))


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        for ex in Command.errors:
            traceback.print_exception(type(ex), ex, ex.__traceback__)
        readline.set_completer(None)


def main():
    boot(" ".join(sys.argv[1:]))
    if "h" in Cfg.prs.opts:
        return help()
    if Cfg.prs.txt:
        cli = CLI()
        return command(Cfg.prs.otxt, cli)
    last(Cfg)
    if Cfg.console:
        print("%s started at %s %s" % (
                                       Cfg.name.upper(),
                                       date,
                                       fmt(
                                           Cfg,
                                           skip="banner,name,prs",
                                           plain=True)
                                          )
                                      )
        cli = Console()
        launch(cli.start)
        Cfg.wait = True
    if Cfg.daemon:
        daemon()
        Cfg.wait = True
    if Cfg.wait:
        irc.init()
        rss.init()
        wait()


wrap(main)
