# generated by datamodel-codegen:
#   filename:  user_identity_v1.json

from __future__ import annotations

from typing import Any, Dict

from pydantic import BaseModel, Extra, Field
from typing_extensions import Literal


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    display_name: str = Field(..., description="The user's full name.")
    first_name: str = Field(..., description="A first name associated with this user.")
    last_name: str = Field(
        ..., description="A last name / family name associated with this user."
    )
    email: str = Field(..., description="Email address registered with this user.")
    user_uri: str = Field(..., description="The URI used to access this user.")
    user_id: str = Field(..., description="The id for this user.")
    mrkt_perm_email: bool = Field(
        ...,
        description="If true, the user has chosen to accept marketing material vie e-mail.",
    )
    language: str = Field(
        ..., description="The language chosen for communication with this user."
    )
    country_code: str = Field(..., description="The country associated with this user.")
    first_time: Dict[str, Any] = Field(
        ...,
        description="A map of first-time indicators. e.g. dex_web_app. In the case of dex_web_app, this value will be true if they have never visited cloud.acrobat.com.",
    )
    analytics_plan_code: str = Field(
        ..., description="An account description to include with analytics events."
    )
    category: Literal["adobeid", "enterprise", "federated", "business"] = Field(
        ...,
        description='An enum indicating the type of account. One of: "adobeid" (type 1), "enterprise" (type 2) or "federated" (type 3) or "business" (type 2e).',
    )
