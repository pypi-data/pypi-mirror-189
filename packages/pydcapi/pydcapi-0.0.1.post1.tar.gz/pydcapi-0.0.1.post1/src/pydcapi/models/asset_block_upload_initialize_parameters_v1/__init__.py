# generated by datamodel-codegen:
#   filename:  asset_block_upload_initialize_parameters_v1.json

from __future__ import annotations

from typing import Optional

from pydantic import AnyUrl, BaseModel, Extra, Field
from typing_extensions import Literal


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    asset_uri: Optional[AnyUrl] = Field(
        None,
        description="Asset uri of the asset which is to be updated via block file upload. This is a mandatory attribute while updating an existing asset.",
    )
    size: float = Field(
        ...,
        description="The total size of the file in bytes. The upper bound is the available storage quota for the user's account in case of permanent asset. Clients uploading large resources may not know the full size of the Resource beforehand. For example, this might occur when the resource is being streamed. To support this use case, clients are permitted to estimate the Resource size at the time the block upload is initiated. If the estimate is larger than the actual size of the resource, some of the upload URL links will not be used, and this is permitted. On the other hand, if the estimate is smaller than the actual size of the resource, the client will run out of upload URL links. If this happens, clients are permitted to request additional upload URLs during the transfer operation. This is done via a PUT to the extend link.",
    )
    block_size: float = Field(
        ...,
        description="The requested size of each block to upload in bytes. Minimum size can be 5 MB and max upto 50 MB. Client should provide block size as per their understanding and ability to do parallel uploads and based on the client input and our min, max limits, we will return a block size which client must honor while doing upload.",
    )
    persistence: Literal["transient", "permanent"] = Field(
        ...,
        description='Asset storage aspect as short-term transient vs. long-term permanent. "transient" creates an asset that will be available for several hours before being garbage collected and deleted. For operations that convert and download immediately, "transient" is the appropriate choice. This should be provided in the initialize request, in order to fail-fast the request if available quota is exhausted.',
    )
    content_type: str = Field(
        ..., description="Content type of the file to be uploaded."
    )
