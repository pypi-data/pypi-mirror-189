# generated by datamodel-codegen:
#   filename:  user_prefs_v1.json

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Extra, Field, constr
from typing_extensions import Literal


class Fte(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    launch_count: Optional[float] = 0
    welcome_dialog_dismissed: Optional[bool] = False


class Dcweb(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    fte: Optional[Fte] = Field(None, description="First Time Experience Tracking")


class RecentAssets(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    since: Optional[
        constr(
            regex=r"([0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z?|\${systemtime_rfc3339})"
        )
    ] = Field(
        None,
        description="The last time the users recent assets list was cleared, represented in UTC formatted to RFC3339. Clients can also pass a special value `${systemtime_rfc3339}` which will use the current time. If recents have not been cleared `since` may be missing.",
    )


class Acroprefs(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    prefsync_enabled: Optional[bool] = None


class Common(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    sync_favorite_files: Optional[bool] = Field(
        None, description="users pin to cloud preferences"
    )
    lastToolUsed: Optional[str] = Field(None, description="last tool used by user")
    acroprefs: Optional[Acroprefs] = Field(
        None, description="user preference to sync his acrobat  preferences"
    )


class Fillsign(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    disableFlattenOnSaveDialog: Optional[bool] = Field(
        False, description="user preference for showing warning for flatten on save"
    )
    ac_s: Optional[Literal[0, 1]] = Field(
        1, description="user  preference for auto complete suggestions"
    )


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    dcweb: Optional[Dcweb] = Field(None, description="DC Web common preferences")
    recent_assets: Optional[RecentAssets] = Field(
        None, description="Last time recent assets was cleared"
    )
    recent_assets_timestamp: Optional[
        constr(
            regex=r"([0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z?|^$|\${systemtime_rfc3339})"
        )
    ] = Field(
        "",
        description="The last time the users recent assets list was cleared, represented in UTC formatted to RFC3339. If the value is an empty string recent assets may not have been set yet. Clients can pass a special value `${systemtime_rfc3339}` which will use the current time or an empty string to clear the recent assets. Example: 2018-01-01T12:00:00Z",
    )
    common: Optional[Common] = Field(
        None, description="DC Common Preferences across clients"
    )
    acrobat: Optional[Dict[str, Any]] = Field(
        None, description="DC Acrobat Preferences shared across different machines"
    )
    fillsign: Optional[Fillsign] = Field(
        None, description="DC Fillsign Preferences across clients"
    )
