# generated by datamodel-codegen:
#   filename:  zip_download_params_v1.json

from __future__ import annotations

from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field, confloat, constr


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    asset_uris: Optional[List[AnyUrl]] = Field(
        None, description="An array of asset uris.", min_items=1
    )
    folder_uri: Optional[AnyUrl] = Field(
        None, description="The uri of folder to download as a zip file."
    )
    zip_file_name: Optional[constr(min_length=1)] = Field(
        "documents.zip or the name of the folder for folders",
        description="The name to give the downloaded zip file.  If not provided, the default is documents.zip for assets, or the name of the folder for folders.",
    )
    time_zone_offset_minutes: Optional[confloat(ge=-1440.0, le=1440.0)] = Field(
        0,
        description="Time zone offset, in minutes, of the client's local time from GMT (e.g. for EDT, tzo=240). If this parameter is not specified the file modification dates in the zip file will be in GMT, this parameter allows the client to get a zip file with client local time mod times.",
    )
    make_ticket: Optional[bool] = Field(
        False,
        description="If true, generate a download ticket valid for 1 minute and include it in the uri.  Defaults to false.  Set true only for URLs that will be used from a web browser in cases that do not support setting an Authorization header. In all other circumstances, set false and use standard authorization.",
    )
