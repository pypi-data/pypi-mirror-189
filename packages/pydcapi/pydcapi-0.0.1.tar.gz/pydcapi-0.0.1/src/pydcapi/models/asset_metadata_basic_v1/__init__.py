# generated by datamodel-codegen:
#   filename:  asset_metadata_basic_v1.json

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    uri: AnyUrl = Field(..., description="URI representing the asset")
    name: str = Field(..., description="Name of the asset.")
    asset_id: Optional[str] = Field(
        None,
        description='The asset id (in URN form).  Use the "asset_uri" uri template in the "templates" section of the discovery info to transform to an asset uri.',
    )
    parent_uri: Optional[AnyUrl] = Field(
        None,
        description="URI of the parent folder of this asset.  If there is no parent (e.g. for a transient asset), this value is not present.",
    )
    parent_id: Optional[str] = Field(
        None,
        description="Folder id (in URN form) of the parent folder of this asset.  If there is no parent (e.g. for a transient asset), this value is not present.",
    )
    size: float = Field(..., description="File size in bytes")
    type: str = Field(..., description="The file's content type (mime-type)")
    md5_digest: Optional[str] = Field(
        None,
        description="The hex digest of 128 bit MD5 digest of the asset - a 32 character string containing only hexadecimal digits.  May not be available immediately after uploading or updating a file.",
    )
    page_count: Optional[float] = Field(
        None,
        description="The number of pages in the asset.  Only present for assets in which the page count has been determined.  Page count discovery happens while generating renditions for supported asset types (e.g. pdf).",
    )
    created: datetime = Field(..., description="The creation date of the asset.")
    modified: datetime = Field(..., description="The modification date of the asset.")
    last_access: Optional[datetime] = Field(
        None, description="The time the asset was last accessed."
    )
    last_pagenum: Optional[float] = Field(
        None,
        description="The number of the page last viewed.  This number is 0 based - the first page is 0, second page is 1, etc.",
    )
    source: Optional[str] = Field(
        None,
        description='Where the asset resides.  Currently either "native" or "creative_cloud"',
    )
    created_by_client: Optional[str] = Field(
        None, description="An indication of which API client first uploaded the asset."
    )
    favorite: Optional[bool] = Field(
        None, description="True if the user has marked this asset a favorite."
    )
    starred: Optional[bool] = Field(
        None, description="True if the user has starred this asset."
    )
    tags: Optional[List[str]] = Field(None, description="An array of tags.")
    custom_tags: Optional[List[str]] = Field(
        None, description="An array of custom tags for client application use."
    )
    sign: Optional[str] = Field(
        None,
        description="sign metadata for platform users (Signatures experience in Acrobat),Proposed sign-schema :https://git.corp.adobe.com/caf/xcm/pull/136/files.",
    )
