# generated by scripts/generate.py

from __future__ import annotations

import re
from typing import TYPE_CHECKING

from pydcapi import utils
from pydcapi.models import system_log_parameters_v1

if TYPE_CHECKING:
    from pydcapi import client as pydcapi_client


class System:
    def __init__(self, client: pydcapi_client.Client):
        self._client: pydcapi_client.Client = client

    def log(
        self,
        *,
        _data: system_log_parameters_v1.Model,
    ) -> None:
        self._client.request(
            method="POST",
            url="{+base_url}/system/log",
            json=_data.dict(),
        )

    def time(
        self,
    ) -> str:
        resp = self._client.request(
            method="GET",
            url="https://taggedpdf.adobe.io/{expiry}/system/time",
            accept=utils.build_content_type(
                "text/plain",
            ),
        )

        content_type = resp.headers["Content-Type"]

        if re.search(r"text/plain", content_type):
            return resp.text
        else:
            raise ValueError(f"Unexpected content type: {content_type}")
