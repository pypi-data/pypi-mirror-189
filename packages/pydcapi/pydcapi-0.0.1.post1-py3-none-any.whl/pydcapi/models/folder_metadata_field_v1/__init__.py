# generated by datamodel-codegen:
#   filename:  folder_metadata_field_v1.json

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    uri: Optional[AnyUrl] = Field(None, description="URI representing the folder")
    name: Optional[str] = Field(None, description="Name of the folder.")
    folder_id: Optional[str] = Field(
        None,
        description='The folder id (in URN form).  Use the "folder_uri" uri template in the "templates" section of the discovery info to transform to a folder uri.',
    )
    parent_uri: Optional[AnyUrl] = Field(
        None,
        description="URI of the parent folder of this folder.  If there is no parent (e.g. for a transient folder), this value is not present.",
    )
    parent_id: Optional[str] = Field(
        None,
        description="Folder id (in URN form) of the parent folder of this folder. If there is no parent (e.g. for a transient folder), this value is not present.",
    )
    created: Optional[datetime] = Field(
        None, description="The creation date of the folder."
    )
    modified: Optional[datetime] = Field(
        None, description="The modification date of the folder."
    )
    source: Optional[str] = Field(
        None,
        description='Where the folder resides.  Currently either "native" or "creative_cloud"',
    )
    favorite: Optional[bool] = Field(
        None, description="True if the user has marked this folder a favorite."
    )
    starred: Optional[bool] = Field(
        None, description="True if the user has starred this folder."
    )
    tags: Optional[List[str]] = Field(None, description="An array of tags.")
    custom_tags: Optional[List[str]] = Field(
        None, description="An array of custom tags for client application use."
    )
