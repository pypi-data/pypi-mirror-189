# generated by datamodel-codegen:
#   filename:  asset_tag_sensei_contentanalyzer_v1.json

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Extra, Field
from typing_extensions import Literal


class Parameters(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    client_version: Optional[str] = Field(
        None, description="Version(s) of client component(s), e.g. ma=1.567.0"
    )
    format: Optional[Literal["instance_data", "fully_tagged_pdf"]] = Field(
        "instance_data",
        description="Workflow to use. fully_tagged_pdf is not implemented yet.",
    )


class Request(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    analyzer_id: Optional[str] = Field(
        None,
        description="The unique service ID (analyzer ID) provided in the request. For Colorado prediction, use the value Annotation:PdfObjectDetectionChain:cfd194a2-9203-4649-9077-a4a90f1e86ab",
    )
    parameters: Optional[Parameters] = Field(
        None, description="Service-specific request parameters"
    )


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    enable_diagnostics: Optional[Literal["true", "false"]] = Field(
        "true", description="Clients should always pass true"
    )
    requests: Optional[List[Request]] = None
