# generated by datamodel-codegen:
#   filename:  exportpdf_options_v1.json

from __future__ import annotations

from typing import Dict, List

from pydantic import BaseModel, Extra, Field, constr


class Locale(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    code: constr(regex=r"^[a-z][a-z]-[A-Z][A-Z]$") = Field(
        ...,
        description="locale name in the form of xx-YY e.g. en-US. In the future, this list may be extended without a change in version.",
    )


class Formats(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    provisioned: bool = Field(
        ...,
        description="Boolean indicator to show whether the current user is provisioned to convert PDF to this file type.",
    )


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    locales: List[Locale] = Field(
        ..., description="A list of all the locales supported for OCR", min_items=13
    )
    formats: Dict[str, Formats] = Field(
        ...,
        description="A list of export file types -- and an indication which formats are provisioned for this user",
    )
