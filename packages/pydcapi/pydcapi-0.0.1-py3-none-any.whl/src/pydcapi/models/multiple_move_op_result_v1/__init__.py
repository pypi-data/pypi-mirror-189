# generated by datamodel-codegen:
#   filename:  multiple_move_op_result_v1.json

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field


class RenameInfo(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    original_name: str = Field(..., description="The original name.")
    name: str = Field(..., description="The name actually used.")


class Body(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    rename_info: Optional[RenameInfo] = Field(
        None,
        description="If on_dup_name was auto_rename and the name was illegal or a duplicate was encountered, contains details on the rename.",
    )


class Error(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    code: str = Field(..., description="The error code.")
    message: str = Field(
        ...,
        description="An English language string that contains more information about the error. This is not intended as information to be presented to an end user, is instead be helpful for logging and debugging.",
    )
    details: Optional[Dict[str, Any]] = Field(
        None,
        description="A JSON object that contains information specific to the error. The schema and semantics are specified with the individual method. This allows machine readable extra information.",
    )


class Multistatu(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    object_uri: AnyUrl = Field(
        ..., description="The uri of object (asset or folder) that was moved."
    )
    status: float = Field(
        ...,
        description="The status code that resulted from moving (or attempting to move) this object.",
    )
    body: Optional[Body] = None
    error: Optional[Error] = Field(
        None,
        description="In the case where status is not success, the error information.",
    )


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    multistatus: List[Multistatu] = Field(..., min_items=1)
