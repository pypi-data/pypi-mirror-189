# generated by datamodel-codegen:
#   filename:  system_folders_v1.json

from __future__ import annotations

from typing import Dict, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field


class DocumentCloud(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    root_uri: AnyUrl = Field(
        ..., description="The URI of the document cloud root folder."
    )
    folder_id: str = Field(..., description="The folder id (in URN form).")


class CreativeCloud(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    root_uri: AnyUrl = Field(
        ..., description="The URI of the creative cloud root folder."
    )
    folder_id: str = Field(..., description="The folder id (in URN form).")


class Roots(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    document_cloud: DocumentCloud
    creative_cloud: Optional[CreativeCloud] = None


class SystemFolders(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    folder_uri: AnyUrl = Field(..., description="URI representing the system folder.")
    folder_id: str = Field(..., description="The folder id (in URN form).")


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    roots: Roots = Field(
        ...,
        description="An object with a field for each root folder available to this user.",
    )
    system_folders: Dict[str, SystemFolders] = Field(
        ...,
        description="An object containing a field for each system folder available to this user. The name of the property is the name of the system folder.  By nature these system folders are often considered private to the service that needs them, so the exact names aren't documented here.",
    )
