# generated by datamodel-codegen:
#   filename:  asset_block_upload_finalize_parameters_v1.json

from __future__ import annotations

from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field
from typing_extensions import Literal


class UploadLink(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    uri: AnyUrl = Field(..., description="Pre-signed URL using which upload is done.")


class FieldLinks(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    upload_links: List[UploadLink] = Field(
        ...,
        description="In the finalize request, the upload links must be provided, which is returned in initialize/extend request. The upload links which are not used should be removed from upload_links.",
        min_items=1,
    )


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    asset_uri: Optional[AnyUrl] = Field(
        None,
        description="If this attribute is not provided, new asset will be created. Applicable only while updating an existing asset. If provided, should match with the asset id provided in the initialize request.",
    )
    parent_uri: Optional[AnyUrl] = Field(
        None,
        description='Applicable only while creating a new asset. Should be passed only when persistence is "permanent". Do not pass when persistence is "transient".',
    )
    name: Optional[str] = Field(
        None,
        description="The name of the asset. Applicable only while creating a new asset.",
    )
    on_dup_name: Optional[Literal["error", "auto_rename"]] = Field(
        "error",
        description='How to handle a duplicate name - legal values are "error" and "auto_rename". Applicable only while creating a new asset. ',
    )
    persistence: Optional[Literal["transient", "permanent"]] = Field(
        None,
        description='Asset storage aspect as short-term transient vs. long-term permanent. "transient" creates an asset that will be available for several hours before being garbage collected and deleted. For operations that convert and download immediately, "transient" is the appropriate choice. If the choice is "permanent", then "parent_uri" must also be specified. ',
    )
    field_links: FieldLinks = Field(..., alias="_links")
    upload_info: str = Field(
        ..., description="Upload info returned in initialize call."
    )
    size: float = Field(
        ..., description="Length of the content uploaded on storage server."
    )
    content_md5: str = Field(
        ...,
        description="Base64-encoded 128-bit MD5 digest/hash as per RFC 1864. Add a md5 string property containing the base64-encoded MD5 hash of the complete Resource. The uploaded resource MD5 hash will be computed and completion request will fail with status code 400 if the two hash values are not identical.",
    )
    content_type: str = Field(
        ..., description="Content type of the file uploaded on storage server."
    )
