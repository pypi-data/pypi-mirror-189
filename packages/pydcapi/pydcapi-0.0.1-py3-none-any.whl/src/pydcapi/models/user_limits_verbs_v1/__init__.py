# generated by datamodel-codegen:
#   filename:  user_limits_verbs_v1.json

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Extra, Field


class QuotaDetails(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    next_available: Optional[int] = Field(
        None,
        description="tells in seconds when next transactions will become available. Value will be -1 if transactions are still remaining for the the user.",
    )
    frequency: Optional[int] = Field(
        None,
        description="the frequency at which quota refreshes. Value will be -1 when frequency is not applicable, like when user has unlimited transactions.",
    )


class Limits(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Uber(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits] = Field(
        None, description="specifies the applicable transactions details for the user."
    )


class Limits1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )


class Createpdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits1] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits2(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class WordToPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits2] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits3(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class PptToPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits3] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits4(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class ExcelToPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits4] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits5(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class JpgToPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits5] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits6(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class OcrPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits6] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits7(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class HtmlToPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits7] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits8(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration7(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )
    max_number_files: Optional[int] = Field(
        None,
        description="Maximum number of files supported by the operation, if applicable",
    )


class OrganizePdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits8] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration7] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits9(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class ReorderPages(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits9] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration7] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits10(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class DeletePages(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits10] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration7] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits11(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class RotatePages(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits11] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration7] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits12(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class InsertPages(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits12] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration7] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits13(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class ExtractPages(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits13] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration7] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits14(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration13(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )


class ExportPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits14] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration13] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits15(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class PdfToImage(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits15] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration13] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits16(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class PdfToExcel(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits16] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration13] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits17(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class PdfToPpt(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits17] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration13] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits18(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class PdfToWord(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits18] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration13] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits19(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration18(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )
    max_number_files: Optional[int] = Field(
        None,
        description="Maximum number of files supported by the operation, if applicable",
    )


class CombinePdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits19] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration18] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits20(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration19(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )


class ProtectPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits20] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration19] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits21(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class CompressPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits21] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration19] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits22(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration21(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )
    max_split_points: Optional[int] = Field(
        None,
        description="Maximum number of split points supported by the operation, if applicable",
    )


class SplitPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits22] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration21] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits23(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration22(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )


class EditPdf(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits23] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration22] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits24(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Createpdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits24] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration22] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits25(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class OcrPdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits25] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration22] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits26(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class CompressPdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits26] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration22] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits27(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration26(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )
    max_number_files: Optional[int] = Field(
        None,
        description="Maximum number of files supported by the operation, if applicable",
    )


class OrganizePdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits27] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration26] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits28(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration27(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )


class ExportPdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits28] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration27] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits29(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration28(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )
    max_number_files: Optional[int] = Field(
        None,
        description="Maximum number of files supported by the operation, if applicable",
    )


class CombinePdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits29] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration28] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits30(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class Configuration29(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    max_file_size: Optional[int] = Field(
        None, description="Maximum file size supported by the operation, if applicable"
    )


class ProtectPdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits30] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration29] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Limits31(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    remaining: Optional[int] = Field(
        None,
        description="tells how many transactions are remaining for the verb. 0 means none remaining, positive integer tells the count that are remaining, -1 means unlimited transactions remaining.",
    )
    quota_details: Optional[QuotaDetails] = Field(
        None,
        description="Adjacent to remaining, represents quota details including next available and applicable frequency per verb, operation level or uber level.",
    )


class EditPdf1(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    limits: Optional[Limits31] = Field(
        None, description="specifies the applicable transactions details for the user."
    )
    configuration: Optional[Configuration29] = Field(
        None,
        description="various configurations applicable to relevant tile for the user. For example, the max_file_size field which signifies the maximum file size that is support for this tile/pdf operation. More fields wrt operation configuration can be added here as and when needed.",
    )


class Operations(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    createpdf: Optional[Createpdf1] = Field(
        None,
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    ocr_pdf: Optional[OcrPdf1] = Field(
        None,
        alias="ocr-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    compress_pdf: Optional[CompressPdf1] = Field(
        None,
        alias="compress-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    organize_pdf: Optional[OrganizePdf1] = Field(
        None,
        alias="organize-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    export_pdf: Optional[ExportPdf1] = Field(
        None,
        alias="export-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    combine_pdf: Optional[CombinePdf1] = Field(
        None,
        alias="combine-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    protect_pdf: Optional[ProtectPdf1] = Field(
        None,
        alias="protect-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    edit_pdf: Optional[EditPdf1] = Field(
        None,
        alias="edit-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )


class Model(BaseModel):
    class Config:
        extra = Extra.allow
        allow_mutation = False

    uber: Uber = Field(
        ...,
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    createpdf: Createpdf = Field(
        ...,
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    word_to_pdf: WordToPdf = Field(
        ...,
        alias="word-to-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    ppt_to_pdf: PptToPdf = Field(
        ...,
        alias="ppt-to-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    excel_to_pdf: ExcelToPdf = Field(
        ...,
        alias="excel-to-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    jpg_to_pdf: JpgToPdf = Field(
        ...,
        alias="jpg-to-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    ocr_pdf: OcrPdf = Field(
        ...,
        alias="ocr-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    html_to_pdf: HtmlToPdf = Field(
        ...,
        alias="html-to-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    organize_pdf: OrganizePdf = Field(
        ...,
        alias="organize-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    reorder_pages: ReorderPages = Field(
        ...,
        alias="reorder-pages",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    delete_pages: DeletePages = Field(
        ...,
        alias="delete-pages",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    rotate_pages: RotatePages = Field(
        ...,
        alias="rotate-pages",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    insert_pages: InsertPages = Field(
        ...,
        alias="insert-pages",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    extract_pages: ExtractPages = Field(
        ...,
        alias="extract-pages",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    export_pdf: ExportPdf = Field(
        ...,
        alias="export-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    pdf_to_image: PdfToImage = Field(
        ...,
        alias="pdf-to-image",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    pdf_to_excel: PdfToExcel = Field(
        ...,
        alias="pdf-to-excel",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    pdf_to_ppt: PdfToPpt = Field(
        ...,
        alias="pdf-to-ppt",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    pdf_to_word: PdfToWord = Field(
        ...,
        alias="pdf-to-word",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    combine_pdf: CombinePdf = Field(
        ...,
        alias="combine-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    protect_pdf: ProtectPdf = Field(
        ...,
        alias="protect-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    compress_pdf: CompressPdf = Field(
        ...,
        alias="compress-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    split_pdf: SplitPdf = Field(
        ...,
        alias="split-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    edit_pdf: EditPdf = Field(
        ...,
        alias="edit-pdf",
        description="Limits in uber response represents the actual limits provided for user at uber level. Client can refer remaining transactions, next_available and frequency fields. Interpretation of remaining, next_available and frequency is similar to verb response.",
    )
    operations: Operations = Field(
        ..., description="Operation level response for user, if applicable"
    )
