# generated by scripts/generate.py

from __future__ import annotations

import re
from typing import TYPE_CHECKING

import uritemplate

from pydcapi import utils
from pydcapi.models import new_asset_job_v1

if TYPE_CHECKING:
    from pydcapi import client as pydcapi_client


class Jobs:
    def __init__(self, client: pydcapi_client.Client):
        self._client: pydcapi_client.Client = client

    def status(
        self,
        *,
        job_uri: str,
    ) -> new_asset_job_v1.Model:
        resp = self._client.request(
            method="GET",
            url=uritemplate.partial(
                "{+job_uri}/status",
                {
                    "job_uri": job_uri,
                },
            ).uri,
            accept=utils.build_content_type(
                utils.content_type_from_model("new_asset_job_v1"),
            ),
        )

        content_type = resp.headers["Content-Type"]

        if re.search(r"schemas/new_asset_job_v1\.json", content_type):
            return new_asset_job_v1.Model.parse_obj(resp.json())
        else:
            raise ValueError(f"Unexpected content type: {content_type}")
