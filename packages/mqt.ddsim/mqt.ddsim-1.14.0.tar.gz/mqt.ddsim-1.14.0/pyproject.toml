[build-system]
requires = [
    "setuptools>=61",
    "setuptools_scm[toml]>=7",
    "ninja>=1.10; sys_platform != 'win32'",
    "cmake>=3.14",
]
build-backend = "setuptools.build_meta"

[project]
name = "mqt.ddsim"
description = "A quantum simulator based on decision diagrams written in C++"
readme = "README.md"
authors = [
    { name = "Stefan Hillmich", email = "stefan.hillmich@jku.at"},
    { name = "Lukas Burgholzer", email = "lukas.burgholzer@jku.at"}
]
keywords = ["MQT", "quantum computing", "design automation", "quantum circuit simulation", "simulation"]
license = { file = "LICENSE.md" }

classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: C++",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
]
requires-python = ">=3.7"
dependencies = [
    "qiskit-terra>=0.19.2"
]
dynamic = ["version"]

[project.optional-dependencies]
tnflow = [
    "sparse",
    "opt-einsum",
    "quimb",
    "pandas",
    "numpy"
]
tests = [
    "pytest"
]
docs = [
    "sphinx>=5",
    "sphinx-rtd-theme",
    "sphinx-rtd-dark-mode",
    "sphinxcontrib-bibtex>=2.4.2",
    "sphinx-copybutton",
    "sphinxext-opengraph"
]

[project.urls]
Homepage = "https://github.com/cda-tum/ddsim"
Documentation = "https://ddsim.readthedocs.io"
"Bug Tracker" = "https://github.com/cda-tum/ddsim/issues"
Discussions = "https://github.com/cda-tum/ddsim/discussions"
Research = "https://www.cda.cit.tum.de/research/quantum_simulation/"

[tool.setuptools.packages.find]
include = ["mqt.*"]


[tool.setuptools_scm]


[tool.cibuildwheel]
build = "cp3*"
skip = "*-musllinux_*"
archs = "auto64"
test-extras = ["test"]
test-command = "python -c \"from mqt import ddsim\""
environment = { DEPLOY = "ON" }
build-frontend = "build"
build-verbosity = 3

[tool.cibuildwheel.linux]

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.15", DEPLOY = "ON" }

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -v -w {dest_dir} {wheel}"
