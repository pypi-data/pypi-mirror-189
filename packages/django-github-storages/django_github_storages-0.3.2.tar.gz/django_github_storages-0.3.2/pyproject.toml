[tool.poetry]
authors     = ["Mugdha Arunim Ahmed <mugdhaarunimahmed2017@gmail.com>"]
classifiers = ['Development Status :: 5 - Production/Stable', 'Environment :: Web Environment', 'Framework :: Django', 'Framework :: Django :: 3.2', 'Framework :: Django :: 4.0', 'Framework :: Django :: 4.1', 'Intended Audience :: Developers', 'License :: OSI Approved :: BSD License', 'Operating System :: OS Independent', 'Programming Language :: Python', 'Programming Language :: Python :: 3', 'Programming Language :: Python :: 3.6', 'Programming Language :: Python :: 3.7', 'Programming Language :: Python :: 3.8', 'Programming Language :: Python :: 3.9', 'Programming Language :: Python :: 3.10', 'Programming Language :: Python :: 3.11']
description = "A Django file storage backend that leverages GitHub."
homepage    = "https://github.com/arunim-io/django-github-storage"
license     = "BSD-3-Clause"
name        = "django-github-storages"
packages    = [{ include = 'github_storage' }]
readme      = "README.md"
repository  = "https://github.com/arunim-io/django-github-storage"
version     = "0.3.2"

  [tool.poetry.dependencies]
  Django     = "^4.1.5"
  python     = ">=3.8"
  requests   = { version = ">=2", python = ">=3.8,<4" }
  simplejson = "^3.18.1"

  [tool.poetry.group.dev.dependencies]
  black      = "^22.12.0"
  commitizen = { version = "^2.39.1", python = ">=3.8,<=3.11" }
  isort      = "^5.11.4"
  pre-commit = "^2.21.0"
  pylint     = "^2.15.9"

[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires      = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]

[tool.poetry-dynamic-versioning]
enable = false
style  = "semver"

[tool.poe.poetry_hooks]
post_install = 'postinstall'
post_update  = 'postupdate'

[tool.poe.tasks]
postinstall = 'pre-commit install --hook-type commit-msg --hook-type pre-commit'
postupdate  = 'pre-commit autoupdate'

[tool.commitizen]
name       = "cz_conventional_commits"
tag_format = "v$version"
version    = "0.3.2"

# pyright
[tool.pyright]
exclude = [".venv"]

# isort
[tool.isort]
known_first_party = ["django"]
profile           = "django"
skip_gitignore    = true
skip_glob         = ["**/migrations/*"]

# pylint
[tool.pylint.main]
disable = ["wrong-import-order", "C0114", "C0115", "C0116", "W0223", "W3101", "C0207", "W0221"]
ignore  = ["migrations", "__init__.py"]

[tool.pylint.message_control]
disable = """
    line-too-long,
    abstract-method,
    no-member,
"""
enable = "useless-suppression"

[tool.pylint.reports]
reports = "no"

[tool.pylint.format]
max-line-length = "79"

[tool.pylint.basic]
good-names = "_,i,e,setUp,tearDown,maxDiff"
