"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import arg_services.cbr.v1beta.model_pb2
import arg_services.nlp.v1.nlp_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Direction:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Direction.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DIRECTION_UNSPECIFIED: _Direction.ValueType  # 0
    DIRECTION_GENERALIZATION: _Direction.ValueType  # 1
    DIRECTION_SPECIALIZATION: _Direction.ValueType  # 2
    DIRECTION_COMBINED: _Direction.ValueType  # 3

class Direction(_Direction, metaclass=_DirectionEnumTypeWrapper): ...

DIRECTION_UNSPECIFIED: Direction.ValueType  # 0
DIRECTION_GENERALIZATION: Direction.ValueType  # 1
DIRECTION_SPECIALIZATION: Direction.ValueType  # 2
DIRECTION_COMBINED: Direction.ValueType  # 3
global___Direction = Direction

class _Pos:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PosEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Pos.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    POS_UNSPECIFIED: _Pos.ValueType  # 0
    POS_NOUN: _Pos.ValueType  # 1
    POS_VERB: _Pos.ValueType  # 2
    POS_ADJECTIVE: _Pos.ValueType  # 3
    POS_ADVERB: _Pos.ValueType  # 4

class Pos(_Pos, metaclass=_PosEnumTypeWrapper): ...

POS_UNSPECIFIED: Pos.ValueType  # 0
POS_NOUN: Pos.ValueType  # 1
POS_VERB: Pos.ValueType  # 2
POS_ADJECTIVE: Pos.ValueType  # 3
POS_ADVERB: Pos.ValueType  # 4
global___Pos = Pos

@typing_extensions.final
class AdaptRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CASE_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    NLP_CONFIG_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def case(self) -> arg_services.cbr.v1beta.model_pb2.AnnotatedGraph: ...
    @property
    def query(self) -> arg_services.cbr.v1beta.model_pb2.AnnotatedGraph: ...
    @property
    def nlp_config(self) -> arg_services.nlp.v1.nlp_pb2.NlpConfig: ...
    direction: global___Direction.ValueType
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        case: arg_services.cbr.v1beta.model_pb2.AnnotatedGraph | None = ...,
        query: arg_services.cbr.v1beta.model_pb2.AnnotatedGraph | None = ...,
        nlp_config: arg_services.nlp.v1.nlp_pb2.NlpConfig | None = ...,
        direction: global___Direction.ValueType = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["case", b"case", "extras", b"extras", "nlp_config", b"nlp_config", "query", b"query"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["case", b"case", "direction", b"direction", "extras", b"extras", "nlp_config", b"nlp_config", "query", b"query"]) -> None: ...

global___AdaptRequest = AdaptRequest

@typing_extensions.final
class AdaptResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADAPTED_CASE_FIELD_NUMBER: builtins.int
    ADAPTATION_RULES_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def adapted_case(self) -> arg_services.cbr.v1beta.model_pb2.AnnotatedGraph: ...
    @property
    def adaptation_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Rule]: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct: ...
    def __init__(
        self,
        *,
        adapted_case: arg_services.cbr.v1beta.model_pb2.AnnotatedGraph | None = ...,
        adaptation_rules: collections.abc.Iterable[global___Rule] | None = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["adapted_case", b"adapted_case", "extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["adaptation_rules", b"adaptation_rules", "adapted_case", b"adapted_case", "extras", b"extras"]) -> None: ...

global___AdaptResponse = AdaptResponse

@typing_extensions.final
class Rule(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    @property
    def source(self) -> global___Concept: ...
    @property
    def target(self) -> global___Concept: ...
    def __init__(
        self,
        *,
        source: global___Concept | None = ...,
        target: global___Concept | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source", b"source", "target", b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["source", b"source", "target", b"target"]) -> None: ...

global___Rule = Rule

@typing_extensions.final
class Concept(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LEMMA_FIELD_NUMBER: builtins.int
    POS_FIELD_NUMBER: builtins.int
    lemma: builtins.str
    pos: global___Pos.ValueType
    def __init__(
        self,
        *,
        lemma: builtins.str = ...,
        pos: global___Pos.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lemma", b"lemma", "pos", b"pos"]) -> None: ...

global___Concept = Concept
