# coding: utf-8

"""
    node-server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.237
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class JobTypeEnum(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        enum_value_to_name = {
            "RETRAIN": "RETRAIN",
            "TRAINING": "TRAINING",
            "EVALUATE": "EVALUATE",
            "IMPORT_MODEL": "IMPORT_MODEL",
            "ANALYZE": "ANALYZE",
            "WARMUP": "WARMUP",
            "TEST_STUB_FUNCTION": "TEST_STUB_FUNCTION",
            "TEST_CUSTOM_LOSS": "TEST_CUSTOM_LOSS",
            "EXPORT_MODEL": "EXPORT_MODEL",
            "DATASET_PARSE": "DATASET_PARSE",
        }
    
    @schemas.classproperty
    def RETRAIN(cls):
        return cls("RETRAIN")
    
    @schemas.classproperty
    def TRAINING(cls):
        return cls("TRAINING")
    
    @schemas.classproperty
    def EVALUATE(cls):
        return cls("EVALUATE")
    
    @schemas.classproperty
    def IMPORT_MODEL(cls):
        return cls("IMPORT_MODEL")
    
    @schemas.classproperty
    def ANALYZE(cls):
        return cls("ANALYZE")
    
    @schemas.classproperty
    def WARMUP(cls):
        return cls("WARMUP")
    
    @schemas.classproperty
    def TEST_STUB_FUNCTION(cls):
        return cls("TEST_STUB_FUNCTION")
    
    @schemas.classproperty
    def TEST_CUSTOM_LOSS(cls):
        return cls("TEST_CUSTOM_LOSS")
    
    @schemas.classproperty
    def EXPORT_MODEL(cls):
        return cls("EXPORT_MODEL")
    
    @schemas.classproperty
    def DATASET_PARSE(cls):
        return cls("DATASET_PARSE")
