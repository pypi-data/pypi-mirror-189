# coding: utf-8

"""
    node-server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.237
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class SlimUserData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "createdAt",
            "role",
            "recordSession",
            "_id",
            "local",
        }
        
        class properties:
            _id = schemas.StrSchema
            role = schemas.StrSchema
            recordSession = schemas.BoolSchema
        
            @staticmethod
            def local() -> typing.Type['SlimUserDataLocal']:
                return SlimUserDataLocal
            createdAt = schemas.DateTimeSchema
            __annotations__ = {
                "_id": _id,
                "role": role,
                "recordSession": recordSession,
                "local": local,
                "createdAt": createdAt,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    createdAt: MetaOapg.properties.createdAt
    role: MetaOapg.properties.role
    recordSession: MetaOapg.properties.recordSession
    _id: MetaOapg.properties._id
    local: 'SlimUserDataLocal'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdAt"]) -> MetaOapg.properties.createdAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["role"]) -> MetaOapg.properties.role: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recordSession"]) -> MetaOapg.properties.recordSession: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["_id"]) -> MetaOapg.properties._id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["local"]) -> 'SlimUserDataLocal': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["createdAt"], typing_extensions.Literal["role"], typing_extensions.Literal["recordSession"], typing_extensions.Literal["_id"], typing_extensions.Literal["local"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdAt"]) -> MetaOapg.properties.createdAt: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["role"]) -> MetaOapg.properties.role: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recordSession"]) -> MetaOapg.properties.recordSession: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["_id"]) -> MetaOapg.properties._id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["local"]) -> 'SlimUserDataLocal': ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["createdAt"], typing_extensions.Literal["role"], typing_extensions.Literal["recordSession"], typing_extensions.Literal["_id"], typing_extensions.Literal["local"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        createdAt: typing.Union[MetaOapg.properties.createdAt, str, datetime, ],
        role: typing.Union[MetaOapg.properties.role, str, ],
        recordSession: typing.Union[MetaOapg.properties.recordSession, bool, ],
        _id: typing.Union[MetaOapg.properties._id, str, ],
        local: 'SlimUserDataLocal',
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'SlimUserData':
        return super().__new__(
            cls,
            *args,
            createdAt=createdAt,
            role=role,
            recordSession=recordSession,
            _id=_id,
            local=local,
            _configuration=_configuration,
        )

from openapi_client.model.slim_user_data_local import SlimUserDataLocal
