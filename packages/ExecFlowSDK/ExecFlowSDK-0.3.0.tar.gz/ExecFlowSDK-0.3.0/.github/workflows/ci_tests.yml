name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:
  basic:
    name: Call external workflow
    uses: SINTEF/ci-cd/.github/workflows/ci_tests.yml@v2.0.0
    with:
      # General
      install_extras: "[dev]"

      # pre-commit
      run_pre-commit: true
      python_version_pre-commit: "3.9"
      skip_pre-commit_hooks: pylint,pylint-tests

      # pylint & safety
      python_version_pylint_safety: "3.9"

      run_pylint: true
      pylint_runs: |
        --rcfile=pyproject.toml --extension-pkg-whitelist='pydantic' execflow
        --rcfile=pyproject.toml --extension-pkg-whitelist='pydantic' --disable=import-outside-toplevel,redefined-outer-name --recursive=yes tests

      run_safety: true
      # Ignore issue 51668 with SQLAlchemy; this should be fixed upstream, since SQLAlchemy is a sub-dependency.
      # Ignore issue 48547 with RDFLib.
      safety_options: |
        --ignore=51668
        --ignore=48547

      # Build package
      run_build_package: true
      python_version_package: "3.9"
      build_libs: flit
      build_cmd: flit build

      # Build documentation
      # Perform this below in explicit job.
      run_build_docs: false

  pytest:
    name: pytest
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:3.8.14-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
    - name: Checkout ExecFlowSDK
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel flit
        pip install -e .[testing]

    - name: Test with pytest
      run: pytest -vvv --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9' && github.repository == 'H2020-OpenModel/WP3-WrapperSDK'
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
