[project]
name = "omnineuro"
description = "omni is a Python/C++17 library for image preprocessing in neuroimaging"
readme = "README.md"
requires-python = ">=3.7"
license = { text = "BSD 3-Clause Clear License" }
authors = [{ name = "Andrew Van", email = "vanandrew@wustl.edu" }]
keywords = ["neuroimaging"]
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Image Processing",
]
urls = { gitlab = "https://gitlab.com/vanandrew/omni" }
dynamic = ["version", "entry-points"]
dependencies = [
    "nibabel >= 3.2.2",
    "numpy >= 1.21.5",
    "pybids >= 0.12.2",
    "scikit-image >= 0.19.0",
    "h5py >= 2.10.0",
    "toml >= 0.10.2",
    "memori >= 0.1.5",
]

[project.optional-dependencies]
doc = [
    "myst-parser >= 0.13.5",
    "numpydoc >= 1.1.0",
    "sphinx >= 4, < 6",
    "pydata-sphinx-theme >= 0.8.1",
]
test = [
    "black >= 20.8b1",
    "coverage[toml] >= 5.5",
    "pytest == 7.1.3",
    "pytest-pycodestyle >= 2.2.0",
]
extra = ["nipy >= 0.5.0", "nipype >= 1.7.1", "sdcflows >= 2.0.13"]

[build-system]
requires = ["setuptools", "wheel", "cmake >= 3.13", "cmake-setuptools-ext"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
exclude = ["tests", "build", "extern"]

[tool.black]
line-length = 120
target-version = ['py37']
exclude = "extern|build"

[tool.coverage.run]
command_line = "-m pytest"
source = ["omni"]
omit = [
    "omni/contrib/*",
    "omni/scripts/fmap_correct.py"
]

[tool.coverage.report]
show_missing = true
precision = 2

[tool.pytest.ini_options]
addopts = "-v --pycodestyle"
filterwarnings = ["ignore::DeprecationWarning:nipy:"]
norecursedirs = ["extern/*", "build/*"]
testpaths = ["tests", "omni"]

[tool.cibuildwheel]
archs = ['x86_64']
build = [
    "cp37-manylinux*",
    "cp38-manylinux*",
    "cp39-manylinux*",
    "cp310-manylinux*",
]
build-frontend = "build"

[tool.cibuildwheel.linux]
before-all = ["yum -y install openblas-devel hdf5-devel fftw3-devel"]
environment = { COMPILE_ARCH = "skylake" }
