Metadata-Version: 2.1
Name: mowgli
Version: 0.1.0
Summary: Mowgli: Multi Omics Wasserstein inteGrative anaLysIs.
Home-page: https://github.com/cantinilab/Mowgli
Author: Geert-Jan Huizing, Laura Cantini, Gabriel Peyr√©
Author-email: geert-jan.huizing@ens.fr
Description-Content-Type: text/markdown
License-File: LICENCE

# Mowgli: Multi Omics Wasserstein inteGrative anaLysIs
[![Tests](https://github.com/gjhuizing/Mowgli/actions/workflows/main.yml/badge.svg)](https://github.com/gjhuizing/Mowgli/actions/workflows/main.yml)
[![codecov](https://codecov.io/gh/gjhuizing/Mowgli/branch/main/graph/badge.svg?token=UBUJF7098Q)](https://codecov.io/gh/gjhuizing/Mowgli)

Mowgli is a novel method for the integration of paired multi-omics data with any type and number of omics, combining integrative Nonnegative Matrix Factorization and Optimal Transport. [Read the preprint!](soon)

![figure](figure.png)

## Install the package

Mowgli is implemented as a Python package seamlessly integrated within the scverse ecosystem, in particular Muon and Scanpy.

### via PyPI (recommended)

```bash
pip install mowgli
```

### via GitHub (development version)

```bash
git clone git@github.com:cantinilab/Mowgli.git
pip install ./Mowgli/
```

## Getting started

Mowgli takes as an input a Muon object and populates its `obsm` and `uns` fiels with the embeddings and dictionaries, respectively. Visit [mowgli.rtfd.io](https://mowgli.rtfd.io/) for more documentation and tutorials.

```python
from mowgli import models
import muon as mu
import scanpy as sc

# Load data into a Muon object.
mdata = mu.load_h5mu("my_data.h5mu")

# Initialize and train the model.
model = models.MowgliModel(latent_dim=15)
model.train(mdata)

# Visualize the embedding with UMAP.
sc.pp.neighbors(mdata, use_rep="W_OT")
sc.tl.umap(mdata)
sc.pl.umap(mdata)
```

## Our preprint

```bibtex
Preprint available soon!
```

If you're looking for the repository with code to reproduce the experiments in our preprint, [here is is!](https://github.com/cantinilab/mowgli_reproducibility)
