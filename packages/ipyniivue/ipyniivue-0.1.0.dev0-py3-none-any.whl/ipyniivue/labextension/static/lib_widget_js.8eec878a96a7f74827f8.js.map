{"version":3,"file":"lib_widget_js.8eec878a96a7f74827f8.js","mappings":";;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;;;;ACda;AACb;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,sBAAsB;AAC5C;AACA;AACA;AACA,aAAa,mBAAO,CAAC,uCAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;;ACpBa;AACb;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,mBAAmB;AACxC;AACA;AACA,4BAA4B,mBAAO,CAAC,qFAAgB;AACpD,gBAAgB,mBAAO,CAAC,+BAAS;AACjC,eAAe,mBAAO,CAAC,oFAAuB;AAC9C,kBAAkB,mBAAO,CAAC,mCAAW;AACrC,mBAAO,CAAC,2CAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB,iSAAiS;AACrW;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAcsEAAsE,uEAAuE;AAC7I;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,mBAAmB;AACnB,wDAAwD,wCAAwC,mBAAmB,mCAAmC;AACtJ;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,sCAAsC;AACtC,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB,IAAI,UAAU,yBAAyB,GAAG;AAClH;AACA;AACA;AACA,oDAAoD,wBAAwB,IAAI,UAAU,0BAA0B;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;AC/ZA;AACA,kCAAkC,mBAAO,CAAC,qGAAgD;AAC1F;AACA;AACA,gDAAgD,sBAAsB,GAAG;AACzE;AACA;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA,4CAA4C,qBAAqB;AACjE;;AAEA;AACA,KAAK;AACL,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B;;AAE/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;;;;;;;;;;AC7FA,UAAU,mBAAO,CAAC,oJAAwE;AAC1F,0BAA0B,mBAAO,CAAC,qHAAuD;;AAEzF;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA;;;;;;;;;;;AClBa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEnF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,qEAAqE,qBAAqB,cAAc;;AAExG;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","sources":["webpack://ipyniivue/./lib/utils.js","webpack://ipyniivue/./lib/version.js","webpack://ipyniivue/./lib/widget.js","webpack://ipyniivue/./css/styles.css","webpack://ipyniivue/./node_modules/css-loader/dist/runtime/api.js","webpack://ipyniivue/./css/styles.css?b3a3","webpack://ipyniivue/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arrayBufferToBase64 = void 0;\n//https://stackoverflow.com/a/9458996\nfunction arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n}\nexports.arrayBufferToBase64 = arrayBufferToBase64;\n//# sourceMappingURL=utils.js.map","\"use strict\";\n// Copyright (c) NiiVue\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MODULE_NAME = exports.MODULE_VERSION = void 0;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require('../package.json');\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexports.MODULE_VERSION = data.version;\n/*\n * The current package name.\n */\nexports.MODULE_NAME = data.name;\n//# sourceMappingURL=version.js.map","\"use strict\";\n// Copyright (c) NiiVue\n// Distributed under the terms of the Modified BSD License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NiivueView = exports.NiivueModel = void 0;\n//Much of the structure and many of the functions/classes in this file\n//are from https://github.com/martinRenou/ipycanvas. NiivueModel is based off of  CanvasModel and NiivueView is based off of CanvasView.\nconst niivue = __importStar(require(\"@niivue/niivue\"));\nconst utils_1 = require(\"./utils\");\nconst base_1 = require(\"@jupyter-widgets/base\");\nconst version_1 = require(\"./version\");\nrequire(\"../css/styles.css\");\nconst COMMANDS = [\n    'saveScene',\n    'addVolumeFromUrl',\n    'removeVolumeByUrl',\n    'setCornerOrientationText',\n    'setRadiologicalConvention',\n    'setMeshThicknessOn2D',\n    'setSliceMosaicString',\n    'setSliceMM',\n    'setHighResolutionCapable',\n    'addVolume',\n    'addMesh',\n    'drawUndo',\n    'loadDrawingFromUrl',\n    'drawOtsu',\n    'removeHaze',\n    'saveImage',\n    'setMeshProperty',\n    'reverseFaces',\n    'setMeshLayerProperty',\n    'setPan2Dxyzmm',\n    'setRenderAzimuthElevation',\n    'setVolume',\n    'removeVolume',\n    'removeVolumeByIndex',\n    'removeMesh',\n    'removeMeshByUrl',\n    'moveVolumeToBottom',\n    'moveVolumeUp',\n    'moveVolumeDown',\n    'moveVolumeToTop',\n    'setClipPlane',\n    'setCrosshairColor',\n    'setCrosshairWidth',\n    'setDrawingEnabled',\n    'setPenValue',\n    'setDrawOpacity',\n    'setSelectionBoxColor',\n    'setSliceType',\n    'setOpacity',\n    'setScale',\n    'setClipPlaneColor',\n    'loadDocumentFromUrl',\n    'loadVolumes',\n    'addMeshFromUrl',\n    'loadMeshes',\n    'loadConnectome',\n    'createEmptyDrawing',\n    'drawGrowCut',\n    'setMeshShader',\n    'setCustomMeshShader',\n    'updateGLVolume',\n    'setColorMap',\n    'setColorMapNegative',\n    'setModulationImage',\n    'setFrame4D',\n    'setInterpolation',\n    'moveCrosshairInVox',\n    'drawMosaic',\n    'addVolumeFromBase64'\n];\nfunction serializeImageData(array) {\n    return new DataView(array.buffer.slice(0));\n}\nfunction deserializeImageData(dataview) {\n    if (dataview === null) {\n        return null;\n    }\n    return new Uint8ClampedArray(dataview.buffer);\n}\nclass NiivueModel extends base_1.DOMWidgetModel {\n    constructor() {\n        super(...arguments);\n        this.currentProcessing = Promise.resolve();\n    }\n    //for drawing things\n    defaults() {\n        return Object.assign(Object.assign({}, super.defaults()), { _model_name: NiivueModel.model_name, _model_module: NiivueModel.model_module, _model_module_version: NiivueModel.model_module_version, _view_name: NiivueModel.view_name, _view_module: NiivueModel.view_module, _view_module_version: NiivueModel.view_module_version, height: 480, width: 640 });\n    }\n    initialize(attributes, options) {\n        super.initialize(attributes, options);\n        this.on('msg:custom', (command, buffers) => {\n            this.currentProcessing = this.currentProcessing.then(() => __awaiter(this, void 0, void 0, function* () {\n                yield this.onCommand(command, buffers);\n            }));\n        });\n        this.createNV();\n    }\n    onCommand(command, buffers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const name = COMMANDS[command[0]];\n            const args = command[1];\n            switch (name) {\n                case 'saveScene':\n                    this.nv.saveScene(args[0]);\n                    break;\n                case 'addVolumeFromUrl':\n                    this.nv.addVolumeFromUrl({ url: args[0] });\n                    break;\n                case 'removeVolumeByUrl':\n                    this.nv.removeVolumeByUrl(args[0]);\n                    break;\n                case 'setCornerOrientationText':\n                    this.nv.setCornerOrientationText(args[0]);\n                    break;\n                case 'setRadiologicalConvention':\n                    this.nv.setRadiologicalConvention(args[0]);\n                    break;\n                case 'setMeshThicknessOn2D':\n                    this.nv.setMeshThicknessOn2D(args[0]);\n                    break;\n                case 'setSliceMosaicString':\n                    this.nv.setSliceMosaicString(args[0]);\n                    break;\n                case 'setSliceMM':\n                    this.nv.setSliceMM(args[0]);\n                    break;\n                case 'setHighResolutionCapable':\n                    this.nv.setHighResolutionCapable(args[0]);\n                    break;\n                case 'addVolume':\n                    this.nv.addVolume(args[0]);\n                    break;\n                case 'addMesh':\n                    this.nv.addMesh(args[0]);\n                    break;\n                case 'drawUndo':\n                    this.nv.drawUndo();\n                    break;\n                case 'loadDrawingFromUrl':\n                    this.nv.loadDrawingFromUrl(args[0]);\n                    break;\n                case 'drawOtsu':\n                    this.nv.drawOtsu(args[0]);\n                    break;\n                case 'removeHaze':\n                    this.nv.removeHaze(args[0], args[1]);\n                    break;\n                case 'saveImage':\n                    this.nv.saveImage(args[0], args[1]);\n                    break;\n                case 'setMeshProperty':\n                    this.nv.setMeshProperty(args[0], args[1], args[2]);\n                    break;\n                case 'reverseFaces':\n                    this.nv.reverseFaces(args[0]);\n                    break;\n                case 'setMeshLayerProperty':\n                    this.nv.setMeshLayerProperty(args[0], args[1], args[2], args[3]);\n                    break;\n                case 'setPan2Dxyzmm':\n                    this.nv.setPan2Dxyzmm(args[0]);\n                    break;\n                case 'setRenderAzimuthElevation':\n                    this.nv.setRenderAzimuthElevation(args[0], args[1]);\n                    break;\n                case 'setVolume':\n                    this.nv.setVolume(args[0], args[1]);\n                    break;\n                case 'removeVolume':\n                    this.nv.removeVolume(args[0]);\n                    break;\n                case 'removeVolumeByIndex':\n                    this.nv.removeVolumeByIndex(args[0]);\n                    break;\n                case 'removeMesh':\n                    this.nv.removeMesh(args[0]);\n                    break;\n                case 'removeMeshByUrl':\n                    this.nv.removeMeshByUrl(args[0]);\n                    break;\n                case 'moveVolumeToBottom':\n                    this.nv.moveVolumeToBottom(args[0]);\n                    break;\n                case 'moveVolumeUp':\n                    this.nv.moveVolumeUp(args[0]);\n                    break;\n                case 'moveVolumeDown':\n                    this.nv.moveVolumeDown(args[0]);\n                    break;\n                case 'moveVolumeToTop':\n                    this.nv.moveVolumeToTop(args[0]);\n                    break;\n                case 'setClipPlane':\n                    this.nv.setClipPlane(args[0]);\n                    break;\n                case 'setCrosshairColor':\n                    this.nv.setCrosshairColor(args[0]);\n                    break;\n                case 'setCrosshairWidth':\n                    this.nv.setCrosshairWidth(args[0]);\n                    break;\n                case 'setDrawingEnabled':\n                    this.nv.setDrawingEnabled(args[0]);\n                    break;\n                case 'setPenValue':\n                    this.nv.setPenValue(args[0], args[1]);\n                    break;\n                case 'setDrawOpacity':\n                    this.nv.setDrawOpacity(args[0]);\n                    break;\n                case 'setSelectionBoxColor':\n                    this.nv.setSelectionBoxColor(args[0]);\n                    break;\n                case 'setSliceType':\n                    this.nv.setSliceType(args[0]);\n                    break;\n                case 'setOpacity':\n                    this.nv.setOpacity(args[0], args[1]);\n                    break;\n                case 'setScale':\n                    this.nv.setScale(args[0]);\n                    break;\n                case 'setClipPlaneColor':\n                    this.nv.setClipPlaneColor(args[0]);\n                    break;\n                case 'loadDocumentFromUrl':\n                    this.nv.loadDocumentFromUrl(args[0]);\n                    break;\n                case 'loadVolumes':\n                    this.nv.loadVolumes(args[0]);\n                    break;\n                case 'addMeshFromUrl':\n                    this.nv.addMeshFromUrl(args[0]);\n                    break;\n                case 'loadMeshes':\n                    this.nv.loadMeshes(args[0]);\n                    break;\n                case 'loadConnectome':\n                    this.nv.loadConnectome(args[0]);\n                    break;\n                case 'createEmptyDrawing':\n                    this.nv.createEmptyDrawing();\n                    break;\n                case 'drawGrowCut':\n                    this.nv.drawGrowCut();\n                    break;\n                case 'setMeshShader':\n                    this.nv.setMeshShader(args[0], args[1]);\n                    break;\n                case 'setCustomMeshShader':\n                    this.nv.setCustomMeshShader(args[0], args[1]);\n                    break;\n                case 'updateGLVolume':\n                    this.nv.updateGLVolume();\n                    break;\n                case 'setColorMap':\n                    this.nv.setColorMap(args[0], args[1]);\n                    break;\n                case 'setColorMapNegative':\n                    this.nv.setColorMapNegative(args[0], args[1]);\n                    break;\n                case 'setModulationImage':\n                    this.nv.setModulationImage(args[0], args[1], args[2]);\n                    break;\n                case 'setFrame4D':\n                    this.nv.setFrame4D(args[0], args[1]);\n                    break;\n                case 'setInterpolation':\n                    this.nv.setInterpolation(args[0]);\n                    break;\n                case 'moveCrosshairInVox':\n                    this.nv.moveCrosshairInVox(args[0], args[1], args[2]);\n                    break;\n                case 'drawMosaic':\n                    this.nv.drawMosaic(args[0]);\n                    break;\n                case 'addVolumeFromBase64':\n                    this.nv.addVolume(niivue.NVImage.loadFromBase64({ name: args[0], base64: utils_1.arrayBufferToBase64(buffers[0].buffer) }));\n                    break;\n            }\n        });\n    }\n    createNV() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.nv = new niivue.Niivue({\n                isResizeCanvas: false,\n                logging: true,\n                textHeight: this.get('text_height'),\n                colorbarHeight: this.get('colorbar_height'),\n                colorbarMargin: this.get('colorbar_margin'),\n                crosshairWidth: this.get('crosshair_width'),\n                rulerWidth: this.get('ruler_width'),\n                backColor: this.get('back_color'),\n                crosshairColor: this.get('crosshair_color'),\n                fontColor: this.get('font_color'),\n                selectionBoxColor: this.get('selection_box_color'),\n                clipPlaneColor: this.get('clip_plane_color'),\n                rulerColor: this.get('ruler_color'),\n                show3Dcrosshair: this.get('show_3D_crosshair'),\n                trustCalMinMax: this.get('trust_cal_min_max'),\n                clipPlaneHotKey: this.get('clip_plane_hot_key'),\n                viewModeHotKey: this.get('view_mode_hot_key'),\n                keyDebounceTime: this.get('key_debounce_time'),\n                doubleTouchTimeout: this.get('double_touch_timeout'),\n                longTouchTimeout: this.get('long_touch_timeout'),\n                isRadiologicalConvention: this.get('is_radiological_convention'),\n                loadingText: this.get('loading_text'),\n                dragAndDropEnabled: this.get('drag_and_drop_enabled'),\n                isNearestInterpolation: this.get('is_nearest_interpolation'),\n                isAtlasOutline: this.get('is_atlas_outline'),\n                isRuler: this.get('is_ruler'),\n                isColorbar: this.get('is_colorbar'),\n                isOrientCube: this.get('is_orient_cube'),\n                multiplanarPadPixels: this.get('multiplanar_pad_pixels'),\n                multiplanarForceRender: this.get('multiplanar_force_render'),\n                meshThicknessOn2D: this.get('mesh_thickness_on_2D') == 1.7976931348623157e+308 ? undefined : this.get('mesh_thickness_on_2D'),\n                dragMode: this.get('drag_mode'),\n                isDepthPickMesh: this.get('is_depth_pick_mesh'),\n                isCornerOrientationText: this.get('is_corner_orientation_text'),\n                sagittalNoseLeft: this.get('sagittal_nose_left'),\n                isSliceMM: this.get('is_slice_MM'),\n                isHighResolutionCapable: this.get('is_high_resolution_capable'),\n                drawingEnabled: this.get('drawing_enabled'),\n                penValue: this.get('pen_value') == 1.7976931348623157e+308 ? undefined : this.get('pen_value'),\n                isFilledPen: this.get('is_filled_pen'),\n                maxDrawUndoBitmaps: this.get('max_draw_undo_bitmaps'),\n                thumbnail: this.get('thumbnail')\n            });\n        });\n    }\n}\nexports.NiivueModel = NiivueModel;\nNiivueModel.serializers = Object.assign(Object.assign({}, base_1.DOMWidgetModel.serializers), { _canvas_manager: { deserialize: base_1.unpack_models }, image_data: {\n        serialize: serializeImageData,\n        deserialize: deserializeImageData\n    } });\nNiivueModel.model_name = 'NiivueModel';\nNiivueModel.model_module = version_1.MODULE_NAME;\nNiivueModel.model_module_version = version_1.MODULE_VERSION;\nNiivueModel.view_name = 'NiivueView'; // Set to null if no view\nNiivueModel.view_module = version_1.MODULE_NAME; // Set to null if no view\nNiivueModel.view_module_version = version_1.MODULE_VERSION;\nclass NiivueView extends base_1.DOMWidgetView {\n    //for changing things / listening to callbacks\n    render() {\n        //reason for canvas creation being in here is 2-fold\n        //1) NiivueVIEW\n        //2) https://ipywidgets.readthedocs.io/en/7.7.0/examples/Widget%20Low%20Level.html#Models-and-Views\n        //   \"Multiple WidgetViews can be linked to a single WidgetModel. This is how you can redisplay the same Widget multiple times and it still works.\"    \n        this.canvas = document.createElement('canvas');\n        this.canvas.classList.add('niivue-widget');\n        this.resize();\n        this.updateCanvas();\n        //this.value_changed();\n        this.model.on_some_change(['width', 'height'], this.resize, this);\n        //this.model.on('change:value', this.value_changed, this);\n    }\n    resize() {\n        //resize div\n        this.el.setAttribute('width', this.model.get('width'));\n        this.el.setAttribute('height', this.model.get('height'));\n        this.el.setAttribute('style', `width: ${this.model.get('width')}px; height: ${this.model.get('height')}px;`);\n        //resize canvas\n        this.canvas.setAttribute('width', this.model.get('width'));\n        this.canvas.setAttribute('height', this.model.get('height'));\n        this.canvas.setAttribute('style', `width: ${this.model.get('width')}px; height: ${this.model.get('height')};`);\n        //redraw\n        this.model.nv.drawScene();\n    }\n    updateCanvas() {\n        this.el.appendChild(this.canvas);\n        this.model.nv.attachToCanvas(this.canvas);\n        this.el.style.backgroundColor = 'transparent';\n    }\n    //proof of concept - can have updates from variable changes\n    value_changed() {\n        this.model.nv.loadVolumes([{ url: this.model.get(\"value\") }]);\n    }\n    //this makes this.el become a custom tag (div in this case). Technically this is not necessary.\n    preinitialize() {\n        this.tagName = 'div';\n    }\n}\nexports.NiivueView = NiivueView;\n//# sourceMappingURL=widget.js.map","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"canvas.niivue-widget {\\n  cursor: crosshair;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};"],"names":[],"sourceRoot":""}