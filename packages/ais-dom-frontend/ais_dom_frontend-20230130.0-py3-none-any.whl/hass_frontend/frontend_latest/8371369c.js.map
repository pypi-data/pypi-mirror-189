{"version":3,"file":"8371369c.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;;;;;;;;;;;AC0BA;AC1DA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAKA;;;;;;;;AA+CA;;;;;;;;;;;;;AC9DA;AACA;;;;;;;;;;;AAWA;;;;AAOA;;;;;;AAMA;;;;AAOA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;;AAOA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;;;;AAMA;;;;;;;;;AASA;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA","sources":["webpack://home-assistant-frontend/./node_modules/@polymer/paper-item/paper-item-body.js","webpack://home-assistant-frontend/./node_modules/@polymer/paper-item/paper-item.js","webpack://home-assistant-frontend/./src/components/ha-button-menu.ts","webpack://home-assistant-frontend/./src/panels/config/ais_dom/ha-config-ais-dom-config-tts.ts"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","import type { Button } from \"@material/mwc-button\";\nimport \"@material/mwc-menu\";\nimport type { Corner, Menu, MenuCorner } from \"@material/mwc-menu\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { FOCUS_TARGET } from \"../dialogs/make-dialog-manager\";\nimport type { HaIconButton } from \"./ha-icon-button\";\n\n@customElement(\"ha-button-menu\")\nexport class HaButtonMenu extends LitElement {\n  protected readonly [FOCUS_TARGET];\n\n  @property() public corner: Corner = \"TOP_START\";\n\n  @property() public menuCorner: MenuCorner = \"START\";\n\n  @property({ type: Number }) public x: number | null = null;\n\n  @property({ type: Number }) public y: number | null = null;\n\n  @property({ type: Boolean }) public multi = false;\n\n  @property({ type: Boolean }) public activatable = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public fixed = false;\n\n  @query(\"mwc-menu\", true) private _menu?: Menu;\n\n  public get items() {\n    return this._menu?.items;\n  }\n\n  public get selected() {\n    return this._menu?.selected;\n  }\n\n  public override focus() {\n    if (this._menu?.open) {\n      this._menu.focusItemAtIndex(0);\n    } else {\n      this._triggerButton?.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\" @slotchange=${this._setTriggerAria}></slot>\n      </div>\n      <mwc-menu\n        .corner=${this.corner}\n        .menuCorner=${this.menuCorner}\n        .fixed=${this.fixed}\n        .multi=${this.multi}\n        .activatable=${this.activatable}\n        .y=${this.y}\n        .x=${this.x}\n      >\n        <slot></slot>\n      </mwc-menu>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    if (document.dir === \"rtl\") {\n      this.updateComplete.then(() => {\n        this.querySelectorAll(\"mwc-list-item\").forEach((item) => {\n          const style = document.createElement(\"style\");\n          style.innerHTML =\n            \"span.material-icons:first-of-type { margin-left: var(--mdc-list-item-graphic-margin, 32px) !important; margin-right: 0px !important;}\";\n          item!.shadowRoot!.appendChild(style);\n        });\n      });\n    }\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu!.anchor = this;\n    this._menu!.show();\n  }\n\n  private get _triggerButton() {\n    return this.querySelector(\n      'ha-icon-button[slot=\"trigger\"], mwc-button[slot=\"trigger\"]'\n    ) as HaIconButton | Button | null;\n  }\n\n  private _setTriggerAria() {\n    if (this._triggerButton) {\n      this._triggerButton.ariaHasPopup = \"menu\";\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n      ::slotted([disabled]) {\n        color: var(--disabled-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-menu\": HaButtonMenu;\n  }\n}\n","import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport { css, CSSResultArray, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\n\nimport \"./ha-config-ais-dom-dashboard\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-button-menu\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport {\n  showAisFileDialog,\n  HaAisFileDialogParams,\n} from \"../../../dialogs/ais-files/show-dialog-ais-file\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\n/*\n *\n */\n@customElement(\"ha-config-ais-dom-config-tts\")\nclass HaConfigAisDomConfigTts extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public isWide?: boolean;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ type: String }) public selectedVoice = \"\";\n\n  protected firstUpdated() {\n    this.selectedVoice = this.hass.states[\"input_select.assistant_voice\"].state;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage header=\"Konfiguracja bramki AIS dom\">\n        <!-- <ha-button-menu corner=\"BOTTOM_START\" slot=\"toolbar-icon\">\n            <ha-icon-button\n              icon=\"hass:dots-vertical\"\n              label=\"Menu\"\n              slot=\"trigger\"\n            >\n            </ha-icon-button>\n            <mwc-list-item>\n                Edit ais_welcome.txt\n            </mwc-list-item>\n        </ha-button-menu> -->\n        <div .narrow=${this.narrow}>\n          <ha-config-section .isWide=${this.isWide}>\n            <span slot=\"header\">Ustawienia głosu Asystenta</span>\n            <span slot=\"introduction\"\n              >Możesz zmienić głos asystenta i dostosować szybkość i ton mowy\n              oraz komunikat mówiony przez asystenta podczas startu\n              systemu..</span\n            >\n            <ha-card header=\"Wybór głosu Asystenta\">\n              <div class=\"card-content\">\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(\n                      this.selectedVoice,\n                      \"Jola online\"\n                    )}\n                    data-voice=\"Jola online\"\n                    alt=\"Jola Online\"\n                    title=\"Jola Online\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Ania.jpg\"\n                  />\n                </div>\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(\n                      this.selectedVoice,\n                      \"Jola lokalnie\"\n                    )}\n                    data-voice=\"Jola lokalnie\"\n                    alt=\"Jola Lokalnie\"\n                    title=\"Jola Lokalnie\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Asia.jpg\"\n                  />\n                </div>\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(this.selectedVoice, \"Celina\")}\n                    data-voice=\"Celina\"\n                    alt=\"Celina\"\n                    title=\"Celina\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Celka.jpg\"\n                  />\n                </div>\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(this.selectedVoice, \"Anżela\")}\n                    data-voice=\"Anżela\"\n                    alt=\"Anżela\"\n                    title=\"Anżela\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Anzela.jpg\"\n                  />\n                </div>\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(this.selectedVoice, \"Asia\")}\n                    data-voice=\"Asia\"\n                    alt=\"Asia\"\n                    title=\"Asia\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Kasia.jpg\"\n                  />\n                </div>\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(\n                      this.selectedVoice,\n                      \"Sebastian\"\n                    )}\n                    data-voice=\"Sebastian\"\n                    alt=\"Sebastian\"\n                    title=\"Sebastian\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Sebastian.jpg\"\n                  />\n                </div>\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(this.selectedVoice, \"Bartek\")}\n                    data-voice=\"Bartek\"\n                    alt=\"Bartek\"\n                    title=\"Bartek\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Bartek.jpg\"\n                  />\n                </div>\n                <div class=\"person\">\n                  <img\n                    class=${this.personImgClass(this.selectedVoice, \"Andrzej\")}\n                    data-voice=\"Andrzej\"\n                    alt=\"Andrzej\"\n                    title=\"Andrzej\"\n                    @click=${this.switchTtsPerson}\n                    src=\"/static/ais_dom/Andrzej.jpg\"\n                  />\n                </div>\n              </div>\n              <div class=\"card-actions person-actions\">\n                <div @click=${this.tuneVoiceTone}>\n                  <mwc-button>\n                    <ha-icon class=\"user-button\" icon=\"hass:tune\"></ha-icon\n                    >&nbsp; Ton mowy</mwc-button\n                  >\n                </div>\n                <div @click=${this.tuneVoiceSpeed}>\n                  <mwc-button>\n                    <ha-icon\n                      class=\"user-button\"\n                      icon=\"hass:play-speed\"\n                    ></ha-icon\n                    >&nbsp; Szybkość mowy\n                  </mwc-button>\n                </div>\n                <div @click=${this._openAisWelcomeText}>\n                  <mwc-button>\n                    <ha-icon\n                      class=\"user-button\"\n                      icon=\"hass:file-document-edit-outline\"\n                    ></ha-icon\n                    >&nbsp; Welcome.txt</mwc-button\n                  >\n                </div>\n              </div>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        .content {\n          padding-bottom: 32px;\n        }\n\n        .border {\n          margin: 32px auto 0;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n          max-width: 1040px;\n        }\n        .narrow .border {\n          max-width: 640px;\n        }\n        .card-actions {\n          display: flex;\n        }\n        ha-card > paper-toggle-button {\n          margin: -4px 0;\n          position: absolute;\n          top: 32px;\n          right: 8px;\n        }\n        .center-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          height: 70px;\n        }\n        div.person {\n          display: inline-block;\n          margin: 10px;\n        }\n        img {\n          border-radius: 50%;\n          width: 100px;\n          height: 100px;\n          border: 20px;\n        }\n        img.person-img-selected {\n          border: 7px solid var(--primary-color);\n          width: 110px;\n          height: 110px;\n        }\n      `,\n    ];\n  }\n\n  async _openAisWelcomeText() {\n    const filePath = \"/data/data/com.termux/files/home/AIS/ais_welcome.txt\";\n    const file = await this.hass.callApi<string>(\"POST\", \"ais_file/read\", {\n      filePath: filePath,\n    });\n    const fileParams: HaAisFileDialogParams = {\n      dialogTitle: \"Edit ais_welcome.txt\",\n      filePath: filePath,\n      fileBody: file,\n      readonly: false,\n    };\n    showAisFileDialog(this, fileParams);\n  }\n\n  computeClasses(isWide) {\n    return isWide ? \"content\" : \"content narrow\";\n  }\n\n  personImgClass(selectedVoice, person) {\n    if (selectedVoice === person) {\n      return \"person-img-selected\";\n    }\n    return \"\";\n  }\n\n  tuneVoiceSpeed() {\n    fireEvent(this, \"hass-more-info\", {\n      entityId: \"input_number.assistant_rate\",\n    });\n  }\n\n  tuneVoiceTone() {\n    fireEvent(this, \"hass-more-info\", {\n      entityId: \"input_number.assistant_tone\",\n    });\n  }\n\n  switchTtsPerson(e) {\n    this.selectedVoice = e.target.dataset.voice;\n    this.hass.callService(\"input_select\", \"select_option\", {\n      entity_id: \"input_select.assistant_voice\",\n      option: e.target.dataset.voice,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-ais-dom-config-tts\": HaConfigAisDomConfigTts;\n  }\n}\n"],"names":[],"sourceRoot":""}